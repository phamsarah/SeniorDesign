{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/components/Dropdown.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNPickerSelect from \"react-native-picker-select\";\n\nvar Dropdown = function (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.state = {\n      value: props.selectedValue\n    };\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (Platform.OS === \"android\") {\n        return React.createElement(Picker, {\n          style: this.props.style,\n          selectedValue: this.state.value,\n          onValueChange: function onValueChange(value) {\n            _this2.setState({\n              value: value\n            });\n\n            _this2.props.onValueChange(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          }\n        }, this.props.options.map(function (option) {\n          return React.createElement(Picker.Item, {\n            key: option.value,\n            label: option.label,\n            value: option.value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            }\n          });\n        }));\n      } else {\n        return React.createElement(RNPickerSelect, {\n          style: this.props.style,\n          items: this.props.options,\n          value: this.state.value,\n          onValueChange: function onValueChange(value) {\n            _this2.setState({\n              value: value\n            });\n\n            _this2.props.onValueChange(value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          }\n        });\n      }\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string\n  })).isRequired,\n  selectedValue: PropTypes.string,\n  onValueChange: PropTypes.func.isRequired,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)])\n};\nDropdown.defaultProps = {\n  style: null\n};\nexport { Dropdown as default };","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/components/Dropdown.js"],"names":["React","PropTypes","RNPickerSelect","Dropdown","props","state","value","selectedValue","Platform","OS","style","setState","onValueChange","options","map","option","label","Component","propTypes","arrayOf","shape","string","isRequired","func","oneOfType","object","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;;IAEqBC,Q;;;AAkBjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEF,KAAK,CAACG;AADJ,KAAb;AAFe;AAKlB;;;;6BAEQ;AAAA;;AACL,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC3B,eACI,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KAA1B;AACQ,UAAA,aAAa,EAAE,KAAKL,KAAL,CAAWC,KADlC;AAEQ,UAAA,aAAa,EAAE,uBAAAA,KAAK,EAAI;AACpB,YAAA,MAAI,CAACK,QAAL,CAAc;AAACL,cAAAA,KAAK,EAAEA;AAAR,aAAd;;AACA,YAAA,MAAI,CAACF,KAAL,CAAWQ,aAAX,CAAyBN,KAAzB;AACH,WALT;AAAA;AAAA;AAAA;AAAA;AAAA,WAOK,KAAKF,KAAL,CAAWS,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM;AAAA,iBAC1B,oBAAC,MAAD,CAAQ,IAAR;AAAa,YAAA,GAAG,EAAEA,MAAM,CAACT,KAAzB;AAAgC,YAAA,KAAK,EAAES,MAAM,CAACC,KAA9C;AAAqD,YAAA,KAAK,EAAED,MAAM,CAACT,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B;AAAA,SAA7B,CAPL,CADJ;AAaH,OAdD,MAcO;AACH,eACI,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWM,KAAlC;AACgB,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWS,OADlC;AAEgB,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KAFlC;AAGgB,UAAA,aAAa,EAAE,uBAAAA,KAAK,EAAI;AACpB,YAAA,MAAI,CAACK,QAAL,CAAc;AAACL,cAAAA,KAAK,EAAEA;AAAR,aAAd;;AACA,YAAA,MAAI,CAACF,KAAL,CAAWQ,aAAX,CAAyBN,KAAzB;AACH,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;AACJ;;;;EApDiCN,KAAK,CAACiB,S;;AAAvBd,Q,CACVe,S,GAAY;AACfL,EAAAA,OAAO,EAAEZ,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,KAAV,CAAgB;AACvCJ,IAAAA,KAAK,EAAEf,SAAS,CAACoB,MADsB;AAEvCf,IAAAA,KAAK,EAAEL,SAAS,CAACoB;AAFsB,GAAhB,CAAlB,EAGLC,UAJW;AAKff,EAAAA,aAAa,EAAEN,SAAS,CAACoB,MALV;AAMfT,EAAAA,aAAa,EAAEX,SAAS,CAACsB,IAAV,CAAeD,UANf;AAOfZ,EAAAA,KAAK,EAAET,SAAS,CAACuB,SAAV,CAAoB,CACvBvB,SAAS,CAACwB,MADa,EAEvBxB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACwB,MAA5B,CAFuB,CAApB;AAPQ,C;AADFtB,Q,CAcVuB,Y,GAAe;AAClBhB,EAAAA,KAAK,EAAE;AADW,C;SAdLP,Q","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Picker, Platform} from \"react-native\";\r\nimport RNPickerSelect from \"react-native-picker-select\";\r\n\r\nexport default class Dropdown extends React.Component {\r\n    static propTypes = {\r\n        options: PropTypes.arrayOf(PropTypes.shape({\r\n            label: PropTypes.string,\r\n            value: PropTypes.string\r\n        })).isRequired,\r\n        selectedValue: PropTypes.string,\r\n        onValueChange: PropTypes.func.isRequired,\r\n        style: PropTypes.oneOfType([\r\n            PropTypes.object,\r\n            PropTypes.arrayOf(PropTypes.object)\r\n        ])\r\n    };\r\n\r\n    static defaultProps = {\r\n        style: null\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.selectedValue\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (Platform.OS === \"android\") {\r\n            return (\r\n                <Picker style={this.props.style}\r\n                        selectedValue={this.state.value}\r\n                        onValueChange={value => {\r\n                            this.setState({value: value});\r\n                            this.props.onValueChange(value);\r\n                        }}\r\n                >\r\n                    {this.props.options.map(option =>\r\n                        <Picker.Item key={option.value} label={option.label} value={option.value}/>\r\n                    )}\r\n                </Picker>\r\n            );\r\n        } else {\r\n            return (\r\n                <RNPickerSelect style={this.props.style}\r\n                                items={this.props.options}\r\n                                value={this.state.value}\r\n                                onValueChange={value => {\r\n                                    this.setState({value: value});\r\n                                    this.props.onValueChange(value);\r\n                                }}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}