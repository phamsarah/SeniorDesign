{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/views/DayView.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport { Agenda } from 'react-native-calendars';\nimport React from 'react';\nimport _ from 'lodash';\nimport { withMappedNavigationProps } from 'react-navigation-props-mapper';\nimport { dayInMS, randomColor, toAMPM, toDateString, toDateTime, toTimeString, blackColor } from \"../util\";\nimport { Client, Event, Venue } from \"../objects\";\nimport Database from \"../Database\";\nimport Styles from \"../styles\";\nimport Dropdown from \"../components/Dropdown\";\nimport AppContainer from \"../components/AppContainer\";\nimport MoreButton from \"../components/MoreButton\";\nconsole.disableYellowBox = true;\nvar DayView = (_dec = withMappedNavigationProps(), _dec(_class = (_temp = _class2 = function (_React$Component2) {\n  _inherits(DayView, _React$Component2);\n\n  function DayView(props) {\n    var _this;\n\n    _classCallCheck(this, DayView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DayView).call(this, props));\n    _this.state = {\n      selectedVenue: _this.props.selectedVenue,\n      selectedDate: _this.props.selectedDate\n    };\n    return _this;\n  }\n\n  _createClass(DayView, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return true;\n    }\n  }, {\n    key: \"_generateDateStorage\",\n    value: function _generateDateStorage() {\n      var _this2 = this;\n\n      var dateEvents = {};\n\n      _.range(-30, 31).forEach(function (mult) {\n        var date = new Date(_this2.props.selectedDate.getTime());\n        date.setTime(date.getTime() + mult * dayInMS);\n        dateEvents[toDateString(date)] = [];\n      });\n\n      var filteredEvents = this.props.database.events.filter(function (event) {\n        return event.venueID === _this2.state.selectedVenue.id;\n      });\n      filteredEvents.forEach(function (event) {\n        var eventDate = toDateString(event.start);\n\n        if (dateEvents[eventDate]) {\n          dateEvents[eventDate].push(event);\n        }\n      });\n      var date = new Date(this.props.selectedDate.getTime());\n      var year = date.getFullYear().toString();\n      var month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1).toString();\n      var day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate().toString();\n\n      if (year in this.props.database.games && month in this.props.database.games[year] && day in this.props.database.games[year][month]) {\n        var gameDay = this.props.database.games[year][month][day];\n\n        if ('auburn' in gameDay) {\n          gameDay.auburn.team = 'auburn';\n          dateEvents[gameDay.auburn.date].push(gameDay.auburn);\n        }\n\n        if ('alabama' in gameDay) {\n          gameDay.alabama.team = 'alabama';\n          dateEvents[gameDay.alabama.date].push(gameDay.alabama);\n        }\n      }\n\n      this.props.database.holidays.filter(function (holiday) {\n        return holiday.end.toDateString() === _this2.props.selectedDate.toDateString();\n      }).forEach(function (holiday) {\n        var dateString = holiday.date.split(' ')[0];\n        dateEvents[dateString].push(holiday);\n      });\n\n      for (var _date in dateEvents) {\n        if (dateEvents.hasOwnProperty(_date)) {\n          dateEvents[_date].sort(function (eventA, eventB) {\n            return eventA.start < eventB.start ? -1 : 1;\n          });\n        }\n      }\n\n      return dateEvents;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(AppContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        }\n      }, React.createElement(View, {\n        style: Styles.calendarHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, React.createElement(Dropdown, {\n        style: Styles.calendarDropdown,\n        options: this.props.database.venues.map(function (venue) {\n          return {\n            label: venue.name,\n            value: venue.id\n          };\n        }),\n        selectedValue: this.state.selectedVenue.id,\n        onValueChange: function onValueChange(venueID) {\n          if (venueID !== null) {\n            _this3.setState({\n              selectedVenue: _this3.props.database.venues.find(function (venue) {\n                return venue.id === venueID;\n              })\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }), React.createElement(MoreButton, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('VenueManage', {\n            database: _this3.props.database,\n            onReturn: function onReturn(venues) {\n              console.log(venues);\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      })), React.createElement(Agenda, {\n        hideKnob: true,\n        selected: toDateString(this.props.selectedDate),\n        onDayPress: function onDayPress(day) {\n          _this3.setState({\n            selectedDate: toDateTime({\n              date: day.dateString\n            })\n          });\n        },\n        items: this._generateDateStorage(),\n        rowHasChanged: function rowHasChanged(eventA, eventB) {\n          if (eventA.clientID || eventA.clientName) {\n            !eventA.isEqual(eventB);\n          }\n        },\n        renderItem: function renderItem(event, first) {\n          return React.createElement(EventBox, {\n            event: event,\n            first: first,\n            client: _this3.props.database.clients.find(function (client) {\n              return client.id === event.clientID;\n            }),\n            onPress: function onPress() {\n              if (event.clientID) {\n                _this3.props.navigation.navigate('Event', {\n                  event: event,\n                  database: _this3.props.database,\n                  defaultVenue: _this3.props.selectedVenue,\n                  defaultDate: _this3.props.selectedDate,\n                  onSave: function onSave(event) {\n                    _this3.props.database.updateEvent(event);\n\n                    _this3.forceUpdate();\n                  },\n                  onDelete: function onDelete(event) {\n                    _this3.props.database.removeEvent(event);\n\n                    _this3.forceUpdate();\n                  }\n                });\n              } else {\n                console.log(event);\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            }\n          });\n        },\n        renderEmptyDate: function renderEmptyDate() {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }), React.createElement(View, {\n        style: DayViewStyles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(Button, {\n        title: \"Add New Event\",\n        color: \"green\",\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Event', {\n            database: _this3.props.database,\n            defaultVenue: _this3.state.selectedVenue,\n            defaultDate: _this3.state.selectedDate,\n            onSave: function onSave(event) {\n              _this3.props.database.addEvent(event);\n\n              _this3.forceUpdate();\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        }\n      })), React.createElement(View, {\n        style: DayViewStyles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        }\n      }, React.createElement(Button, {\n        title: \"Export Excel\",\n        color: \"green\",\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Excel');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      })));\n    }\n  }]);\n\n  return DayView;\n}(React.Component), _class2.propTypes = {\n  selectedDate: PropTypes.instanceOf(Date).isRequired,\n  selectedVenue: PropTypes.instanceOf(Venue).isRequired,\n  database: PropTypes.instanceOf(Database).isRequired\n}, _temp)) || _class);\nexport { DayView as default };\n\nvar EventBox = function (_React$Component) {\n  _inherits(EventBox, _React$Component);\n\n  function EventBox(props) {\n    _classCallCheck(this, EventBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventBox).call(this, props));\n  }\n\n  _createClass(EventBox, [{\n    key: \"_getTimeString\",\n    value: function _getTimeString() {\n      var start = toAMPM(toTimeString(this.props.event.start));\n      var end = toAMPM(toTimeString(this.props.event.end));\n      return [start, end].join(' - ');\n    }\n  }, {\n    key: \"_getInitials\",\n    value: function _getInitials() {\n      var splits = this.state.clientName.split(' ');\n\n      if (splits.length < 2) {\n        return splits[0][0];\n      } else {\n        return splits[0][0] + splits[splits.length - 1][0];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.event.clientID || this.props.event.clientName) {\n        if (!this.props.client) {\n          this.state = {\n            clientName: this.props.event.clientName,\n            clientColor: blackColor()\n          };\n        } else {\n          this.state = {\n            clientName: this.props.client.stageName,\n            clientColor: randomColor(this.props.client.id)\n          };\n        }\n\n        return React.createElement(TouchableOpacity, {\n          style: [DayViewStyles.eventContainer, this.props.first ? DayViewStyles.firstEventContainer : null],\n          onPress: this.props.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          }\n        }, React.createElement(View, {\n          style: DayViewStyles.eventInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          }\n        }, React.createElement(Text, {\n          style: DayViewStyles.eventInfoText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        }, this._getTimeString()), React.createElement(Text, {\n          style: DayViewStyles.eventInfoText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          }\n        }, this.state.clientName)), React.createElement(View, {\n          style: DayViewStyles.eventIconContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          }\n        }, React.createElement(View, {\n          style: [DayViewStyles.eventIcon, {\n            backgroundColor: this.state.clientColor.hex\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          }\n        }, React.createElement(Text, {\n          style: [DayViewStyles.eventIconText, {\n            color: this.state.clientColor.isDark ? '#fff' : '#000'\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          }\n        }, this._getInitials()))));\n      } else if (this.props.event.opponent) {\n          return React.createElement(TouchableOpacity, {\n            style: [DayViewStyles.eventContainer, this.props.first ? DayViewStyles.firstEventContainer : null],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            }\n          }, React.createElement(View, {\n            style: DayViewStyles.eventInfo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            }\n          }, React.createElement(Text, {\n            style: DayViewStyles.eventInfoText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            }\n          }, this.props.event.time), React.createElement(Text, {\n            style: DayViewStyles.eventInfoText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 328\n            }\n          }, this.props.event.team[0].toUpperCase() + this.props.event.team.slice(1) + \" \" + (this.props.event.location === 'home' || this.props.event.location === 'neutral' ? 'vs' : 'at') + \" \" + this.props.event.opponent)), React.createElement(View, {\n            style: DayViewStyles.eventIconContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            }\n          }, React.createElement(View, {\n            style: [DayViewStyles.eventIcon, {\n              backgroundColor: this.props.event.team === 'auburn' ? '#000080' : '#990000'\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 340\n            }\n          }, React.createElement(Text, {\n            style: [DayViewStyles.eventIconText, {\n              color: '#fff'\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349\n            }\n          }, this.props.event.team === 'auburn' ? 'AU' : 'UA'))));\n        } else {\n            return React.createElement(TouchableOpacity, {\n              style: [DayViewStyles.eventContainer, this.props.first ? DayViewStyles.firstEventContainer : null],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 361\n              }\n            }, React.createElement(View, {\n              style: DayViewStyles.eventInfo,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 367\n              }\n            }, React.createElement(Text, {\n              style: DayViewStyles.eventInfoText,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 369\n              }\n            }, this.props.event.name)), React.createElement(View, {\n              style: DayViewStyles.eventIconContainer,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 373\n              }\n            }, React.createElement(View, {\n              style: [DayViewStyles.eventIcon, {\n                backgroundColor: '#556B2F'\n              }],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 375\n              }\n            }, React.createElement(Text, {\n              style: [DayViewStyles.eventIconText, {\n                color: '#fff'\n              }],\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 378\n              }\n            }, this.props.event.name.split(' ').map(function (word) {\n              return word[0];\n            }).join('')))));\n          }\n    }\n  }]);\n\n  return EventBox;\n}(React.Component);\n\nEventBox.propTypes = {\n  event: PropTypes.instanceOf(Event),\n  client: PropTypes.instanceOf(Client),\n  onPress: PropTypes.func,\n  first: PropTypes.bool\n};\nvar DayViewStyles = StyleSheet.create({\n  eventContainer: {\n    backgroundColor: '#fff',\n    padding: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    borderRadius: 5,\n    marginRight: 7.5,\n    marginBottom: 10\n  },\n  firstEventContainer: {\n    marginTop: 10\n  },\n  eventInfo: {\n    flexGrow: 4,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignContent: 'space-between'\n  },\n  eventInfoText: {\n    fontSize: 18\n  },\n  eventIconContainer: {\n    flexShrink: 0\n  },\n  eventIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    fontSize: 25,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  eventIconText: {\n    fontSize: 25\n  },\n  buttonContainer: {\n    padding: 5\n  }\n});","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/views/DayView.js"],"names":["PropTypes","Agenda","React","_","withMappedNavigationProps","dayInMS","randomColor","toAMPM","toDateString","toDateTime","toTimeString","blackColor","Client","Event","Venue","Database","Styles","Dropdown","AppContainer","MoreButton","console","disableYellowBox","DayView","props","state","selectedVenue","selectedDate","dateEvents","range","forEach","mult","date","Date","getTime","setTime","filteredEvents","database","events","filter","event","venueID","id","eventDate","start","push","year","getFullYear","toString","month","getMonth","day","getDate","games","gameDay","auburn","team","alabama","holidays","holiday","end","dateString","split","hasOwnProperty","sort","eventA","eventB","calendarHeader","calendarDropdown","venues","map","venue","label","name","value","setState","find","navigation","navigate","onReturn","log","_generateDateStorage","clientID","clientName","isEqual","first","clients","client","defaultVenue","defaultDate","onSave","updateEvent","forceUpdate","onDelete","removeEvent","DayViewStyles","buttonContainer","addEvent","Component","propTypes","instanceOf","isRequired","EventBox","join","splits","length","clientColor","stageName","eventContainer","firstEventContainer","onPress","eventInfo","eventInfoText","_getTimeString","eventIconContainer","eventIcon","backgroundColor","hex","eventIconText","color","isDark","_getInitials","opponent","time","toUpperCase","slice","location","word","func","bool","StyleSheet","create","padding","display","flexDirection","borderRadius","marginRight","marginBottom","marginTop","flexGrow","justifyContent","alignContent","fontSize","flexShrink","width","height","alignItems"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,YANF,EAOEC,UAPF;AASA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AAEAC,OAAO,CAACC,gBAAR,GAA2B,IAA3B;IAEqBC,O,WADpBlB,yBAAyB,E;;;AAQxB,mBAAYmB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,MAAKF,KAAL,CAAWE,aADf;AAEXC,MAAAA,YAAY,EAAE,MAAKH,KAAL,CAAWG;AAFd,KAAb;AAHiB;AAOlB;;;;4CAEuB;AACtB,aAAO,IAAP;AACD;;;2CAEsB;AAAA;;AACrB,UAAIC,UAAU,GAAG,EAAjB;;AAIAxB,MAAAA,CAAC,CAACyB,KAAF,CAAQ,CAAC,EAAT,EAAa,EAAb,EAAiBC,OAAjB,CAAyB,UAACC,IAAD,EAAU;AACjC,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,MAAI,CAACT,KAAL,CAAWG,YAAX,CAAwBO,OAAxB,EAAT,CAAX;AACAF,QAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACE,OAAL,KAAiBH,IAAI,GAAGzB,OAArC;AAEAsB,QAAAA,UAAU,CAACnB,YAAY,CAACuB,IAAD,CAAb,CAAV,GAAiC,EAAjC;AACD,OALD;;AAQA,UAAII,cAAc,GAAG,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,MAApB,CAA2BC,MAA3B,CACnB,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,OAAN,KAAkB,MAAI,CAAChB,KAAL,CAAWC,aAAX,CAAyBgB,EAAtD;AAAA,OADmB,CAArB;AAGAN,MAAAA,cAAc,CAACN,OAAf,CAAuB,UAACU,KAAD,EAAW;AAChC,YAAIG,SAAS,GAAGlC,YAAY,CAAC+B,KAAK,CAACI,KAAP,CAA5B;;AACA,YAAIhB,UAAU,CAACe,SAAD,CAAd,EAA2B;AACzBf,UAAAA,UAAU,CAACe,SAAD,CAAV,CAAsBE,IAAtB,CAA2BL,KAA3B;AACD;AACF,OALD;AAQA,UAAMR,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAKT,KAAL,CAAWG,YAAX,CAAwBO,OAAxB,EAAT,CAAb;AACA,UAAMY,IAAI,GAAGd,IAAI,CAACe,WAAL,GAAmBC,QAAnB,EAAb;AACA,UAAMC,KAAK,GACTjB,IAAI,CAACkB,QAAL,KAAkB,CAAlB,GAAsB,EAAtB,UACQlB,IAAI,CAACkB,QAAL,KAAkB,CAD1B,IAEI,CAAClB,IAAI,CAACkB,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAHN;AAIA,UAAMG,GAAG,GACPnB,IAAI,CAACoB,OAAL,KAAiB,EAAjB,SAA0BpB,IAAI,CAACoB,OAAL,EAA1B,GAA6CpB,IAAI,CAACoB,OAAL,GAAeJ,QAAf,EAD/C;;AAEA,UACEF,IAAI,IAAI,KAAKtB,KAAL,CAAWa,QAAX,CAAoBgB,KAA5B,IACAJ,KAAK,IAAI,KAAKzB,KAAL,CAAWa,QAAX,CAAoBgB,KAApB,CAA0BP,IAA1B,CADT,IAEAK,GAAG,IAAI,KAAK3B,KAAL,CAAWa,QAAX,CAAoBgB,KAApB,CAA0BP,IAA1B,EAAgCG,KAAhC,CAHT,EAIE;AACA,YAAMK,OAAO,GAAG,KAAK9B,KAAL,CAAWa,QAAX,CAAoBgB,KAApB,CAA0BP,IAA1B,EAAgCG,KAAhC,EAAuCE,GAAvC,CAAhB;;AACA,YAAI,YAAYG,OAAhB,EAAyB;AACvBA,UAAAA,OAAO,CAACC,MAAR,CAAeC,IAAf,GAAsB,QAAtB;AACA5B,UAAAA,UAAU,CAAC0B,OAAO,CAACC,MAAR,CAAevB,IAAhB,CAAV,CAAgCa,IAAhC,CAAqCS,OAAO,CAACC,MAA7C;AACD;;AACD,YAAI,aAAaD,OAAjB,EAA0B;AACxBA,UAAAA,OAAO,CAACG,OAAR,CAAgBD,IAAhB,GAAuB,SAAvB;AACA5B,UAAAA,UAAU,CAAC0B,OAAO,CAACG,OAAR,CAAgBzB,IAAjB,CAAV,CAAiCa,IAAjC,CAAsCS,OAAO,CAACG,OAA9C;AACD;AACF;;AAGD,WAAKjC,KAAL,CAAWa,QAAX,CAAoBqB,QAApB,CACGnB,MADH,CAEI,UAACoB,OAAD;AAAA,eACEA,OAAO,CAACC,GAAR,CAAYnD,YAAZ,OAA+B,MAAI,CAACe,KAAL,CAAWG,YAAX,CAAwBlB,YAAxB,EADjC;AAAA,OAFJ,EAKGqB,OALH,CAKW,UAAC6B,OAAD,EAAa;AACpB,YAAME,UAAU,GAAGF,OAAO,CAAC3B,IAAR,CAAa8B,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAnB;AACAlC,QAAAA,UAAU,CAACiC,UAAD,CAAV,CAAuBhB,IAAvB,CAA4Bc,OAA5B;AACD,OARH;;AAWA,WAAK,IAAI3B,KAAT,IAAiBJ,UAAjB,EAA6B;AAC3B,YAAIA,UAAU,CAACmC,cAAX,CAA0B/B,KAA1B,CAAJ,EAAqC;AACnCJ,UAAAA,UAAU,CAACI,KAAD,CAAV,CAAiBgC,IAAjB,CAAsB,UAACC,MAAD,EAASC,MAAT;AAAA,mBACpBD,MAAM,CAACrB,KAAP,GAAesB,MAAM,CAACtB,KAAtB,GAA8B,CAAC,CAA/B,GAAmC,CADf;AAAA,WAAtB;AAGD;AACF;;AAED,aAAOhB,UAAP;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACkD,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAElD,MAAM,CAACmD,gBADhB;AAEE,QAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWa,QAAX,CAAoBgC,MAApB,CAA2BC,GAA3B,CAA+B,UAACC,KAAD,EAAW;AACjD,iBAAO;AACLC,YAAAA,KAAK,EAAED,KAAK,CAACE,IADR;AAELC,YAAAA,KAAK,EAAEH,KAAK,CAAC7B;AAFR,WAAP;AAID,SALQ,CAFX;AAQE,QAAA,aAAa,EAAE,KAAKjB,KAAL,CAAWC,aAAX,CAAyBgB,EAR1C;AASE,QAAA,aAAa,EAAE,uBAACD,OAAD,EAAa;AAC1B,cAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,YAAA,MAAI,CAACkC,QAAL,CAAc;AACZjD,cAAAA,aAAa,EAAE,MAAI,CAACF,KAAL,CAAWa,QAAX,CAAoBgC,MAApB,CAA2BO,IAA3B,CACb,UAACL,KAAD;AAAA,uBAAWA,KAAK,CAAC7B,EAAN,KAAaD,OAAxB;AAAA,eADa;AADH,aAAd;AAKD;AACF,SAjBH;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAoBE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACjB,KAAL,CAAWqD,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B,EAA8C;AAC5CzC,YAAAA,QAAQ,EAAE,MAAI,CAACb,KAAL,CAAWa,QADuB;AAE5C0C,YAAAA,QAAQ,EAAE,kBAACV,MAAD,EAAY;AACpBhD,cAAAA,OAAO,CAAC2D,GAAR,CAAYX,MAAZ;AACD;AAJ2C,WAA9C,CADO;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,CADF,EAgCE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAE,IADZ;AAEE,QAAA,QAAQ,EAAE5D,YAAY,CAAC,KAAKe,KAAL,CAAWG,YAAZ,CAFxB;AAGE,QAAA,UAAU,EAAE,oBAACwB,GAAD,EAAS;AACnB,UAAA,MAAI,CAACwB,QAAL,CAAc;AACZhD,YAAAA,YAAY,EAAEjB,UAAU,CAAC;AAAEsB,cAAAA,IAAI,EAAEmB,GAAG,CAACU;AAAZ,aAAD;AADZ,WAAd;AAGD,SAPH;AAQE,QAAA,KAAK,EAAE,KAAKoB,oBAAL,EART;AASE,QAAA,aAAa,EAAE,uBAAChB,MAAD,EAASC,MAAT,EAAoB;AACjC,cAAID,MAAM,CAACiB,QAAP,IAAmBjB,MAAM,CAACkB,UAA9B,EAA0C;AACxC,aAAClB,MAAM,CAACmB,OAAP,CAAelB,MAAf,CAAD;AACD;AACF,SAbH;AAcE,QAAA,UAAU,EAAE,oBAAC1B,KAAD,EAAQ6C,KAAR,EAAkB;AAC5B,iBACE,oBAAC,QAAD;AACE,YAAA,KAAK,EAAE7C,KADT;AAEE,YAAA,KAAK,EAAE6C,KAFT;AAGE,YAAA,MAAM,EAAE,MAAI,CAAC7D,KAAL,CAAWa,QAAX,CAAoBiD,OAApB,CAA4BV,IAA5B,CACN,UAACW,MAAD;AAAA,qBAAYA,MAAM,CAAC7C,EAAP,KAAcF,KAAK,CAAC0C,QAAhC;AAAA,aADM,CAHV;AAME,YAAA,OAAO,EAAE,mBAAM;AACb,kBAAI1C,KAAK,CAAC0C,QAAV,EAAoB;AAClB,gBAAA,MAAI,CAAC1D,KAAL,CAAWqD,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,EAAwC;AACtCtC,kBAAAA,KAAK,EAAEA,KAD+B;AAEtCH,kBAAAA,QAAQ,EAAE,MAAI,CAACb,KAAL,CAAWa,QAFiB;AAGtCmD,kBAAAA,YAAY,EAAE,MAAI,CAAChE,KAAL,CAAWE,aAHa;AAItC+D,kBAAAA,WAAW,EAAE,MAAI,CAACjE,KAAL,CAAWG,YAJc;AAKtC+D,kBAAAA,MAAM,EAAE,gBAAClD,KAAD,EAAW;AACjB,oBAAA,MAAI,CAAChB,KAAL,CAAWa,QAAX,CAAoBsD,WAApB,CAAgCnD,KAAhC;;AACA,oBAAA,MAAI,CAACoD,WAAL;AACD,mBARqC;AAStCC,kBAAAA,QAAQ,EAAE,kBAACrD,KAAD,EAAW;AACnB,oBAAA,MAAI,CAAChB,KAAL,CAAWa,QAAX,CAAoByD,WAApB,CAAgCtD,KAAhC;;AACA,oBAAA,MAAI,CAACoD,WAAL;AACD;AAZqC,iBAAxC;AAcD,eAfD,MAeO;AACLvE,gBAAAA,OAAO,CAAC2D,GAAR,CAAYxC,KAAZ;AACD;AACF,aAzBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD,SA5CH;AA6CE,QAAA,eAAe,EAAE,2BAAM;AACrB,iBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SA/CH;AAAA;AAAA;AAAA;AAAA;AAAA,QAhCF,EAiFE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEuD,aAAa,CAACC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACxE,KAAL,CAAWqD,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,EAAwC;AACtCzC,YAAAA,QAAQ,EAAE,MAAI,CAACb,KAAL,CAAWa,QADiB;AAEtCmD,YAAAA,YAAY,EAAE,MAAI,CAAC/D,KAAL,CAAWC,aAFa;AAGtC+D,YAAAA,WAAW,EAAE,MAAI,CAAChE,KAAL,CAAWE,YAHc;AAItC+D,YAAAA,MAAM,EAAE,gBAAClD,KAAD,EAAW;AACjB,cAAA,MAAI,CAAChB,KAAL,CAAWa,QAAX,CAAoB4D,QAApB,CAA6BzD,KAA7B;;AACA,cAAA,MAAI,CAACoD,WAAL;AACD;AAPqC,WAAxC,CADO;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjFF,EAkGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,aAAa,CAACC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACxE,KAAL,CAAWqD,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,CAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlGF,CADF;AA4GD;;;;EAxMkC3E,KAAK,CAAC+F,S,WAClCC,S,GAAY;AACjBxE,EAAAA,YAAY,EAAE1B,SAAS,CAACmG,UAAV,CAAqBnE,IAArB,EAA2BoE,UADxB;AAEjB3E,EAAAA,aAAa,EAAEzB,SAAS,CAACmG,UAAV,CAAqBrF,KAArB,EAA4BsF,UAF1B;AAGjBhE,EAAAA,QAAQ,EAAEpC,SAAS,CAACmG,UAAV,CAAqBpF,QAArB,EAA+BqF;AAHxB,C;SADA9E,O;;IA2Mf+E,Q;;;AAQJ,oBAAY9E,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;qCAEgB;AACf,UAAIoB,KAAK,GAAGpC,MAAM,CAACG,YAAY,CAAC,KAAKa,KAAL,CAAWgB,KAAX,CAAiBI,KAAlB,CAAb,CAAlB;AACA,UAAIgB,GAAG,GAAGpD,MAAM,CAACG,YAAY,CAAC,KAAKa,KAAL,CAAWgB,KAAX,CAAiBoB,GAAlB,CAAb,CAAhB;AAEA,aAAO,CAAChB,KAAD,EAAQgB,GAAR,EAAa2C,IAAb,CAAkB,KAAlB,CAAP;AACD;;;mCAEc;AACb,UAAIC,MAAM,GAAG,KAAK/E,KAAL,CAAW0D,UAAX,CAAsBrB,KAAtB,CAA4B,GAA5B,CAAb;;AACA,UAAI0C,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrB,eAAOD,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP;AACD,OAFD,MAEO;AACL,eAAOA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,IAAeA,MAAM,CAACA,MAAM,CAACC,MAAP,GAAgB,CAAjB,CAAN,CAA0B,CAA1B,CAAtB;AACD;AACF;;;6BAEQ;AAEP,UAAI,KAAKjF,KAAL,CAAWgB,KAAX,CAAiB0C,QAAjB,IAA6B,KAAK1D,KAAL,CAAWgB,KAAX,CAAiB2C,UAAlD,EAA8D;AAC5D,YAAI,CAAC,KAAK3D,KAAL,CAAW+D,MAAhB,EAAwB;AACtB,eAAK9D,KAAL,GAAa;AACX0D,YAAAA,UAAU,EAAE,KAAK3D,KAAL,CAAWgB,KAAX,CAAiB2C,UADlB;AAEXuB,YAAAA,WAAW,EAAE9F,UAAU;AAFZ,WAAb;AAID,SALD,MAKO;AACL,eAAKa,KAAL,GAAa;AACX0D,YAAAA,UAAU,EAAE,KAAK3D,KAAL,CAAW+D,MAAX,CAAkBoB,SADnB;AAEXD,YAAAA,WAAW,EAAEnG,WAAW,CAAC,KAAKiB,KAAL,CAAW+D,MAAX,CAAkB7C,EAAnB;AAFb,WAAb;AAID;;AAED,eACE,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAE,CACLqD,aAAa,CAACa,cADT,EAEL,KAAKpF,KAAL,CAAW6D,KAAX,GAAmBU,aAAa,CAACc,mBAAjC,GAAuD,IAFlD,CADT;AAKE,UAAA,OAAO,EAAE,KAAKrF,KAAL,CAAWsF,OALtB;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEf,aAAa,CAACgB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEhB,aAAa,CAACiB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKC,cAAL,EADH,CAFF,EAOE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,aAAa,CAACiB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKvF,KAAL,CAAW0D,UADd,CAPF,CAPF,EAkBE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEY,aAAa,CAACmB,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLnB,aAAa,CAACoB,SADT,EAEL;AAAEC,YAAAA,eAAe,EAAE,KAAK3F,KAAL,CAAWiF,WAAX,CAAuBW;AAA1C,WAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACLtB,aAAa,CAACuB,aADT,EAEL;AAAEC,YAAAA,KAAK,EAAE,KAAK9F,KAAL,CAAWiF,WAAX,CAAuBc,MAAvB,GAAgC,MAAhC,GAAyC;AAAlD,WAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG,KAAKC,YAAL,EANH,CANF,CAFF,CAlBF,CADF;AAuCD,OApDD,MAuDK,IAAI,KAAKjG,KAAL,CAAWgB,KAAX,CAAiBkF,QAArB,EAA+B;AAClC,iBACE,oBAAC,gBAAD;AACE,YAAA,KAAK,EAAE,CACL3B,aAAa,CAACa,cADT,EAEL,KAAKpF,KAAL,CAAW6D,KAAX,GAAmBU,aAAa,CAACc,mBAAjC,GAAuD,IAFlD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,aAME,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEd,aAAa,CAACgB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEhB,aAAa,CAACiB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAKxF,KAAL,CAAWgB,KAAX,CAAiBmF,IADpB,CAFF,EAOE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE5B,aAAa,CAACiB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,KAAKxF,KAAL,CAAWgB,KAAX,CAAiBgB,IAAjB,CAAsB,CAAtB,EAAyBoE,WAAzB,KACA,KAAKpG,KAAL,CAAWgB,KAAX,CAAiBgB,IAAjB,CAAsBqE,KAAtB,CAA4B,CAA5B,CAFF,UAIE,KAAKrG,KAAL,CAAWgB,KAAX,CAAiBsF,QAAjB,KAA8B,MAA9B,IACA,KAAKtG,KAAL,CAAWgB,KAAX,CAAiBsF,QAAjB,KAA8B,SAD9B,GAEI,IAFJ,GAGI,IAPN,UAQI,KAAKtG,KAAL,CAAWgB,KAAX,CAAiBkF,QARrB,CAPF,CANF,EAuBE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE3B,aAAa,CAACmB,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE,CACLnB,aAAa,CAACoB,SADT,EAEL;AACEC,cAAAA,eAAe,EACb,KAAK5F,KAAL,CAAWgB,KAAX,CAAiBgB,IAAjB,KAA0B,QAA1B,GAAqC,SAArC,GAAiD;AAFrD,aAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,aASE,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE,CAACuC,aAAa,CAACuB,aAAf,EAA8B;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAK/F,KAAL,CAAWgB,KAAX,CAAiBgB,IAAjB,KAA0B,QAA1B,GAAqC,IAArC,GAA4C,IAD/C,CATF,CAFF,CAvBF,CADF;AA0CD,SA3CI,MA8CA;AACH,mBACE,oBAAC,gBAAD;AACE,cAAA,KAAK,EAAE,CACLuC,aAAa,CAACa,cADT,EAEL,KAAKpF,KAAL,CAAW6D,KAAX,GAAmBU,aAAa,CAACc,mBAAjC,GAAuD,IAFlD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,eAME,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEd,aAAa,CAACgB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEhB,aAAa,CAACiB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,KAAKxF,KAAL,CAAWgB,KAAX,CAAiBiC,IADpB,CAFF,CANF,EAYE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAEsB,aAAa,CAACmB,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE,oBAAC,IAAD;AACE,cAAA,KAAK,EAAE,CAACnB,aAAa,CAACoB,SAAf,EAA0B;AAAEC,gBAAAA,eAAe,EAAE;AAAnB,eAA1B,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,eAGE,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE,CAACrB,aAAa,CAACuB,aAAf,EAA8B;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,eACG,KAAK/F,KAAL,CAAWgB,KAAX,CAAiBiC,IAAjB,CACEX,KADF,CACQ,GADR,EAEEQ,GAFF,CAEM,UAACyD,IAAD;AAAA,qBAAUA,IAAI,CAAC,CAAD,CAAd;AAAA,aAFN,EAGExB,IAHF,CAGO,EAHP,CADH,CAHF,CAFF,CAZF,CADF;AA4BD;AACF;;;;EAjKoBpG,KAAK,CAAC+F,S;;AAAvBI,Q,CACGH,S,GAAY;AACjB3D,EAAAA,KAAK,EAAEvC,SAAS,CAACmG,UAAV,CAAqBtF,KAArB,CADU;AAEjByE,EAAAA,MAAM,EAAEtF,SAAS,CAACmG,UAAV,CAAqBvF,MAArB,CAFS;AAGjBiG,EAAAA,OAAO,EAAE7G,SAAS,CAAC+H,IAHF;AAIjB3C,EAAAA,KAAK,EAAEpF,SAAS,CAACgI;AAJA,C;AAmKrB,IAAMlC,aAAa,GAAGmC,UAAU,CAACC,MAAX,CAAkB;AACtCvB,EAAAA,cAAc,EAAE;AACdQ,IAAAA,eAAe,EAAE,MADH;AAEdgB,IAAAA,OAAO,EAAE,EAFK;AAGdC,IAAAA,OAAO,EAAE,MAHK;AAIdC,IAAAA,aAAa,EAAE,KAJD;AAKdC,IAAAA,YAAY,EAAE,CALA;AAMdC,IAAAA,WAAW,EAAE,GANC;AAOdC,IAAAA,YAAY,EAAE;AAPA,GADsB;AAUtC5B,EAAAA,mBAAmB,EAAE;AACnB6B,IAAAA,SAAS,EAAE;AADQ,GAViB;AAatC3B,EAAAA,SAAS,EAAE;AACT4B,IAAAA,QAAQ,EAAE,CADD;AAETN,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITM,IAAAA,cAAc,EAAE,eAJP;AAKTC,IAAAA,YAAY,EAAE;AALL,GAb2B;AAoBtC7B,EAAAA,aAAa,EAAE;AACb8B,IAAAA,QAAQ,EAAE;AADG,GApBuB;AAuBtC5B,EAAAA,kBAAkB,EAAE;AAClB6B,IAAAA,UAAU,EAAE;AADM,GAvBkB;AA0BtC5B,EAAAA,SAAS,EAAE;AACT6B,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTV,IAAAA,YAAY,EAAE,EAHL;AAITO,IAAAA,QAAQ,EAAE,EAJD;AAKTT,IAAAA,OAAO,EAAE,MALA;AAMTa,IAAAA,UAAU,EAAE,QANH;AAOTN,IAAAA,cAAc,EAAE;AAPP,GA1B2B;AAmCtCtB,EAAAA,aAAa,EAAE;AACbwB,IAAAA,QAAQ,EAAE;AADG,GAnCuB;AAsCtC9C,EAAAA,eAAe,EAAE;AACfoC,IAAAA,OAAO,EAAE;AADM;AAtCqB,CAAlB,CAAtB","sourcesContent":["import { Button, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport { Agenda } from 'react-native-calendars';\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport { withMappedNavigationProps } from 'react-navigation-props-mapper';\r\nimport {\r\n  dayInMS,\r\n  randomColor,\r\n  toAMPM,\r\n  toDateString,\r\n  toDateTime,\r\n  toTimeString,\r\n  blackColor,\r\n} from '../util';\r\nimport { Client, Event, Venue } from '../objects';\r\nimport Database from '../Database';\r\nimport Styles from '../styles';\r\nimport Dropdown from '../components/Dropdown';\r\nimport AppContainer from '../components/AppContainer';\r\nimport MoreButton from '../components/MoreButton';\r\n\r\nconsole.disableYellowBox = true;\r\n@withMappedNavigationProps()\r\nexport default class DayView extends React.Component {\r\n  static propTypes = {\r\n    selectedDate: PropTypes.instanceOf(Date).isRequired,\r\n    selectedVenue: PropTypes.instanceOf(Venue).isRequired,\r\n    database: PropTypes.instanceOf(Database).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedVenue: this.props.selectedVenue,\r\n      selectedDate: this.props.selectedDate,\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n\r\n  _generateDateStorage() {\r\n    let dateEvents = {};\r\n\r\n    // Initialize date properties for object\r\n    // _.range(-13, 16).forEach(mult => {\r\n    _.range(-30, 31).forEach((mult) => {\r\n      let date = new Date(this.props.selectedDate.getTime());\r\n      date.setTime(date.getTime() + mult * dayInMS);\r\n\r\n      dateEvents[toDateString(date)] = [];\r\n    });\r\n\r\n    // Insert events into object\r\n    let filteredEvents = this.props.database.events.filter(\r\n      (event) => event.venueID === this.state.selectedVenue.id\r\n    );\r\n    filteredEvents.forEach((event) => {\r\n      let eventDate = toDateString(event.start);\r\n      if (dateEvents[eventDate]) {\r\n        dateEvents[eventDate].push(event);\r\n      }\r\n    });\r\n\r\n    // Insert football games into the events object\r\n    const date = new Date(this.props.selectedDate.getTime());\r\n    const year = date.getFullYear().toString();\r\n    const month =\r\n      date.getMonth() + 1 < 10\r\n        ? `0${date.getMonth() + 1}`\r\n        : (date.getMonth() + 1).toString();\r\n    const day =\r\n      date.getDate() < 10 ? `0${date.getDate()}` : date.getDate().toString();\r\n    if (\r\n      year in this.props.database.games &&\r\n      month in this.props.database.games[year] &&\r\n      day in this.props.database.games[year][month]\r\n    ) {\r\n      const gameDay = this.props.database.games[year][month][day];\r\n      if ('auburn' in gameDay) {\r\n        gameDay.auburn.team = 'auburn';\r\n        dateEvents[gameDay.auburn.date].push(gameDay.auburn);\r\n      }\r\n      if ('alabama' in gameDay) {\r\n        gameDay.alabama.team = 'alabama';\r\n        dateEvents[gameDay.alabama.date].push(gameDay.alabama);\r\n      }\r\n    }\r\n\r\n    // If today is a holiday, insert into the events object\r\n    this.props.database.holidays\r\n      .filter(\r\n        (holiday) =>\r\n          holiday.end.toDateString() === this.props.selectedDate.toDateString()\r\n      )\r\n      .forEach((holiday) => {\r\n        const dateString = holiday.date.split(' ')[0];\r\n        dateEvents[dateString].push(holiday);\r\n      });\r\n\r\n    // Sort events within object\r\n    for (let date in dateEvents) {\r\n      if (dateEvents.hasOwnProperty(date)) {\r\n        dateEvents[date].sort((eventA, eventB) =>\r\n          eventA.start < eventB.start ? -1 : 1\r\n        );\r\n      }\r\n    }\r\n\r\n    return dateEvents;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppContainer>\r\n        <View style={Styles.calendarHeader}>\r\n          <Dropdown\r\n            style={Styles.calendarDropdown}\r\n            options={this.props.database.venues.map((venue) => {\r\n              return {\r\n                label: venue.name,\r\n                value: venue.id,\r\n              };\r\n            })}\r\n            selectedValue={this.state.selectedVenue.id}\r\n            onValueChange={(venueID) => {\r\n              if (venueID !== null) {\r\n                this.setState({\r\n                  selectedVenue: this.props.database.venues.find(\r\n                    (venue) => venue.id === venueID\r\n                  ),\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <MoreButton\r\n            onPress={() =>\r\n              this.props.navigation.navigate('VenueManage', {\r\n                database: this.props.database,\r\n                onReturn: (venues) => {\r\n                  console.log(venues);\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </View>\r\n        <Agenda\r\n          hideKnob={true}\r\n          selected={toDateString(this.props.selectedDate)}\r\n          onDayPress={(day) => {\r\n            this.setState({\r\n              selectedDate: toDateTime({ date: day.dateString }),\r\n            });\r\n          }}\r\n          items={this._generateDateStorage()}\r\n          rowHasChanged={(eventA, eventB) => {\r\n            if (eventA.clientID || eventA.clientName) {\r\n              !eventA.isEqual(eventB);\r\n            }\r\n          }}\r\n          renderItem={(event, first) => {\r\n            return (\r\n              <EventBox\r\n                event={event}\r\n                first={first}\r\n                client={this.props.database.clients.find(\r\n                  (client) => client.id === event.clientID\r\n                )}\r\n                onPress={() => {\r\n                  if (event.clientID) {\r\n                    this.props.navigation.navigate('Event', {\r\n                      event: event,\r\n                      database: this.props.database,\r\n                      defaultVenue: this.props.selectedVenue,\r\n                      defaultDate: this.props.selectedDate,\r\n                      onSave: (event) => {\r\n                        this.props.database.updateEvent(event);\r\n                        this.forceUpdate();\r\n                      },\r\n                      onDelete: (event) => {\r\n                        this.props.database.removeEvent(event);\r\n                        this.forceUpdate();\r\n                      },\r\n                    });\r\n                  } else {\r\n                    console.log(event);\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n          renderEmptyDate={() => {\r\n            return <View />;\r\n          }}\r\n        />\r\n        <View style={DayViewStyles.buttonContainer}>\r\n          <Button\r\n            title='Add New Event'\r\n            color='green'\r\n            onPress={() =>\r\n              this.props.navigation.navigate('Event', {\r\n                database: this.props.database,\r\n                defaultVenue: this.state.selectedVenue,\r\n                defaultDate: this.state.selectedDate,\r\n                onSave: (event) => {\r\n                  this.props.database.addEvent(event);\r\n                  this.forceUpdate();\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </View>\r\n        <View style={DayViewStyles.buttonContainer}>\r\n          <Button\r\n            title='Export Excel'\r\n            color='green'\r\n            onPress={() => this.props.navigation.navigate('Excel')}\r\n          />\r\n        </View>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\nclass EventBox extends React.Component {\r\n  static propTypes = {\r\n    event: PropTypes.instanceOf(Event),\r\n    client: PropTypes.instanceOf(Client),\r\n    onPress: PropTypes.func,\r\n    first: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  _getTimeString() {\r\n    let start = toAMPM(toTimeString(this.props.event.start));\r\n    let end = toAMPM(toTimeString(this.props.event.end));\r\n\r\n    return [start, end].join(' - ');\r\n  }\r\n\r\n  _getInitials() {\r\n    let splits = this.state.clientName.split(' ');\r\n    if (splits.length < 2) {\r\n      return splits[0][0];\r\n    } else {\r\n      return splits[0][0] + splits[splits.length - 1][0];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Render a normal event\r\n    if (this.props.event.clientID || this.props.event.clientName) {\r\n      if (!this.props.client) {\r\n        this.state = {\r\n          clientName: this.props.event.clientName,\r\n          clientColor: blackColor(),\r\n        };\r\n      } else {\r\n        this.state = {\r\n          clientName: this.props.client.stageName,\r\n          clientColor: randomColor(this.props.client.id),\r\n        };\r\n      }\r\n\r\n      return (\r\n        <TouchableOpacity\r\n          style={[\r\n            DayViewStyles.eventContainer,\r\n            this.props.first ? DayViewStyles.firstEventContainer : null,\r\n          ]}\r\n          onPress={this.props.onPress}\r\n        >\r\n          <View style={DayViewStyles.eventInfo}>\r\n            {/* Time */}\r\n            <Text style={DayViewStyles.eventInfoText}>\r\n              {this._getTimeString()}\r\n            </Text>\r\n\r\n            {/* Performer */}\r\n            <Text style={DayViewStyles.eventInfoText}>\r\n              {this.state.clientName}\r\n            </Text>\r\n          </View>\r\n          <View style={DayViewStyles.eventIconContainer}>\r\n            {/* Circle with Initials */}\r\n            <View\r\n              style={[\r\n                DayViewStyles.eventIcon,\r\n                { backgroundColor: this.state.clientColor.hex },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  DayViewStyles.eventIconText,\r\n                  { color: this.state.clientColor.isDark ? '#fff' : '#000' },\r\n                ]}\r\n              >\r\n                {this._getInitials()}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n\r\n    // Render a football game\r\n    else if (this.props.event.opponent) {\r\n      return (\r\n        <TouchableOpacity\r\n          style={[\r\n            DayViewStyles.eventContainer,\r\n            this.props.first ? DayViewStyles.firstEventContainer : null,\r\n          ]}\r\n        >\r\n          <View style={DayViewStyles.eventInfo}>\r\n            {/* Time */}\r\n            <Text style={DayViewStyles.eventInfoText}>\r\n              {this.props.event.time}\r\n            </Text>\r\n\r\n            {/* Performer */}\r\n            <Text style={DayViewStyles.eventInfoText}>{`${\r\n              this.props.event.team[0].toUpperCase() +\r\n              this.props.event.team.slice(1)\r\n            } ${\r\n              this.props.event.location === 'home' ||\r\n              this.props.event.location === 'neutral'\r\n                ? 'vs'\r\n                : 'at'\r\n            } ${this.props.event.opponent}`}</Text>\r\n          </View>\r\n          <View style={DayViewStyles.eventIconContainer}>\r\n            {/* Circle with Initials */}\r\n            <View\r\n              style={[\r\n                DayViewStyles.eventIcon,\r\n                {\r\n                  backgroundColor:\r\n                    this.props.event.team === 'auburn' ? '#000080' : '#990000',\r\n                },\r\n              ]}\r\n            >\r\n              <Text style={[DayViewStyles.eventIconText, { color: '#fff' }]}>\r\n                {this.props.event.team === 'auburn' ? 'AU' : 'UA'}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n\r\n    // Render holiday\r\n    else {\r\n      return (\r\n        <TouchableOpacity\r\n          style={[\r\n            DayViewStyles.eventContainer,\r\n            this.props.first ? DayViewStyles.firstEventContainer : null,\r\n          ]}\r\n        >\r\n          <View style={DayViewStyles.eventInfo}>\r\n            {/* Name of holiday */}\r\n            <Text style={DayViewStyles.eventInfoText}>\r\n              {this.props.event.name}\r\n            </Text>\r\n          </View>\r\n          <View style={DayViewStyles.eventIconContainer}>\r\n            {/* Circle with Initials */}\r\n            <View\r\n              style={[DayViewStyles.eventIcon, { backgroundColor: '#556B2F' }]}\r\n            >\r\n              <Text style={[DayViewStyles.eventIconText, { color: '#fff' }]}>\r\n                {this.props.event.name\r\n                  .split(' ')\r\n                  .map((word) => word[0])\r\n                  .join('')}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst DayViewStyles = StyleSheet.create({\r\n  eventContainer: {\r\n    backgroundColor: '#fff',\r\n    padding: 10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    borderRadius: 5,\r\n    marginRight: 7.5,\r\n    marginBottom: 10,\r\n  },\r\n  firstEventContainer: {\r\n    marginTop: 10,\r\n  },\r\n  eventInfo: {\r\n    flexGrow: 4,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignContent: 'space-between',\r\n  },\r\n  eventInfoText: {\r\n    fontSize: 18,\r\n  },\r\n  eventIconContainer: {\r\n    flexShrink: 0,\r\n  },\r\n  eventIcon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    fontSize: 25,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  eventIconText: {\r\n    fontSize: 25,\r\n  },\r\n  buttonContainer: {\r\n    padding: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}