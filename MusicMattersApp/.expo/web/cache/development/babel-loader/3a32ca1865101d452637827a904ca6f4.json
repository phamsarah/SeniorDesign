{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/views/EventView.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Event, Venue } from \"../objects\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RadioGroup } from 'react-native-btr';\nimport DateTimePicker from 'react-native-modal-datetime-picker/src/index';\nimport Styles from \"../styles\";\nimport { toAMPM, toDateString, toDateTime, toMilitaryTime, toTimeString, toUS } from \"../util\";\nimport Database from \"../Database\";\nimport { withMappedNavigationProps } from 'react-navigation-props-mapper';\nimport Dropdown from \"../components/Dropdown\";\nimport TimeInput from \"../components/TimeInput\";\nimport AppContainer from \"../components/AppContainer\";\nvar EventView = (_dec = withMappedNavigationProps(), _dec(_class = (_temp = _class2 = function (_React$Component2) {\n  _inherits(EventView, _React$Component2);\n\n  function EventView(props) {\n    var _this3;\n\n    _classCallCheck(this, EventView);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(EventView).call(this, props));\n    var event = _this3.props.event || new Event();\n    _this3.isNew = !event.id;\n    _this3.state = {\n      clientID: event.clientID || _this3.props.database.clients[0].id,\n      clientName: event.clientName || '',\n      venueID: _this3.isNew ? _this3.props.defaultVenue.id : event.venueID,\n      price: event.price.toString() || '',\n      date: _this3.isNew ? toDateString(_this3.props.defaultDate) : toDateString(event.start),\n      startTime: toTimeString(event.start),\n      endTime: toTimeString(event.end),\n      customTime: false,\n      didChangeCustomStart: false,\n      didChangeCustomEnd: false,\n      buttons: [],\n      isClientDeleted: false,\n      disableDocGeneration: false\n    };\n    _this3.state.buttons = _this3._generateRadioButtons();\n\n    if (_this3.isNew) {\n      var venue = _this3.props.database.venues.find(function (element) {\n        return element.id === _this3.state.venueID;\n      });\n\n      var presetTimeSlots = venue.presetTimeSlots;\n\n      if (presetTimeSlots.length) {\n        presetTimeSlots = _this3.sortAndFilterTimeSlots(presetTimeSlots);\n        _this3.state.startTime = presetTimeSlots[0].start;\n        _this3.state.endTime = presetTimeSlots[0].end;\n      }\n    } else {\n      if (!_this3.props.database.clients.find(function (client) {\n        return client.id === _this3.state.clientID;\n      })) {\n        _this3.state.isClientDeleted = true;\n      }\n    }\n\n    return _this3;\n  }\n\n  _createClass(EventView, [{\n    key: \"sortAndFilterTimeSlots\",\n    value: function sortAndFilterTimeSlots(timeSlots) {\n      timeSlots = timeSlots.filter(function (timeSlot) {\n        return timeSlot.start != 'null' && timeSlot.end != 'null';\n      });\n      timeSlots = timeSlots.sort(function (el1, el2) {\n        var hour1 = parseInt(el1.start.split(':')[0]);\n        var hour2 = parseInt(el2.start.split(':')[0]);\n        return hour1 - hour2;\n      });\n      return timeSlots;\n    }\n  }, {\n    key: \"_generateRadioButtons\",\n    value: function _generateRadioButtons() {\n      var _this4 = this;\n\n      var venue = this.props.database.venues.find(function (element) {\n        return element.id === _this4.state.venueID;\n      });\n      var presetTimeSlots = venue.presetTimeSlots;\n      presetTimeSlots = this.sortAndFilterTimeSlots(presetTimeSlots);\n      var timeRanges = [];\n\n      for (var i in presetTimeSlots) {\n        var timeSlot = presetTimeSlots[i];\n        var startAmPm = toAMPM(timeSlot.start);\n        var endAmPm = toAMPM(timeSlot.end);\n        timeRanges.push(startAmPm + ' - ' + endAmPm);\n      }\n\n      var buttons = [];\n\n      for (var i = 0; i < timeRanges.length; i++) {\n        buttons.push({\n          label: timeRanges[i],\n          value: i\n        });\n      }\n\n      buttons.push({\n        label: 'Custom',\n        value: 'c'\n      });\n      var timeString = [toAMPM(this.state.startTime), toAMPM(this.state.endTime)].join(' - ');\n      var matchingButton = buttons.find(function (button) {\n        return button.label === timeString;\n      });\n\n      if (this.isNew) {\n        buttons[0].checked = true;\n\n        if (buttons[0].value === 'c') {\n          this.state.customTime = true;\n        }\n      } else {\n        if (matchingButton) {\n          matchingButton.checked = true;\n        } else {\n          buttons[buttons.length - 1].checked = true;\n          this.state.customTime = true;\n        }\n      }\n\n      return buttons;\n    }\n  }, {\n    key: \"_handleDocumentSending\",\n    value: function _handleDocumentSending(includeMonthDocs) {\n      var _this5 = this;\n\n      var docQueries = [];\n      docQueries.push(this.props.database.sendForm({\n        type: 'artist_confirmation',\n        event: this.props.event.id\n      }));\n      docQueries.push(this.props.database.sendForm({\n        type: 'invoice',\n        event: this.props.event.id\n      }));\n\n      if (includeMonthDocs) {\n        docQueries.push(this.props.database.sendForm({\n          type: 'booking_list',\n          venue: this.props.event.venueID,\n          month: this.props.event.start.getMonth() + 1,\n          year: this.props.event.start.getFullYear()\n        }));\n        docQueries.push(this.props.database.sendForm({\n          type: 'calendar',\n          venue: this.props.event.venueID,\n          month: this.props.event.start.getMonth() + 1,\n          year: this.props.event.start.getFullYear()\n        }));\n      }\n\n      Promise.all(docQueries).then(function () {\n        alert('Emails successfully sent!');\n      }).catch(function (err) {\n        alert('An error occurred while sending the emails.\\n' + err);\n        console.error(err);\n      }).finally(function () {\n        _this5.setState({\n          disableDocGeneration: false\n        });\n      });\n      alert('Emails have now begun sending.' + ' Please wait until all emails have been sent before requesting more.' + ' This may take up to a minute to complete.');\n      this.setState({\n        disableDocGeneration: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(AppContainer, {\n        style: Styles.infoView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, React.createElement(View, {\n        style: Styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      }, React.createElement(Text, {\n        style: Styles.infoTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }, this.isNew ? 'Create New Booking' : 'Manage Booking'), React.createElement(View, {\n        style: this.state.isClientDeleted ? Styles.hide : Styles.inputRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, React.createElement(Text, {\n        style: Styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        }\n      }, \"Client\"), React.createElement(Dropdown, {\n        style: Styles.pickerBox,\n        options: this.props.database.clients.map(function (client) {\n          return {\n            label: client.stageName,\n            value: client.id\n          };\n        }),\n        selectedValue: this.state.clientID,\n        onValueChange: function onValueChange(value) {\n          return _this6.setState({\n            clientID: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      })), React.createElement(View, {\n        style: this.state.isClientDeleted ? Styles.inputRow2 : Styles.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        }\n      }, React.createElement(Text, {\n        style: Styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        }\n      }, \"Client\"), React.createElement(Text, {\n        style: Styles.inputBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      }, this.state.clientName)), React.createElement(View, {\n        style: Styles.dateContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, React.createElement(Text, {\n        style: Styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        }\n      }, \"Date\"), React.createElement(DateInput, {\n        style: Styles.inputBox,\n        value: toUS(this.state.date),\n        onValueChange: function onValueChange(value) {\n          return _this6.setState({\n            date: value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }\n      })), React.createElement(View, {\n        style: Styles.inputRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        }\n      }, React.createElement(Text, {\n        style: Styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        }\n      }, \"Time\"), React.createElement(RadioGroup, {\n        style: Styles.datetimeContainer,\n        key: this.state.date,\n        selectedIndex: 0,\n        radioButtons: this._generateRadioButtons(),\n        onPress: function onPress(buttons) {\n          var selected = buttons.find(function (b) {\n            return b.checked;\n          });\n\n          if (selected.value === 'c') {\n            _this6.setState({\n              customTime: true\n            });\n          } else {\n            var splits = selected.label.split('-');\n\n            _this6.setState({\n              startTime: toMilitaryTime(splits[0].trim()),\n              endTime: toMilitaryTime(splits[1].trim()),\n              customTime: false\n            });\n          }\n\n          _this6.setState({\n            buttons: buttons\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        }\n      })), React.createElement(View, {\n        style: this.state.customTime ? Styles.customTimeContainer : Styles.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        }\n      }, React.createElement(View, {\n        style: Styles.inputRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        }\n      }, React.createElement(Text, {\n        style: Styles.customTimeTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        }\n      }, \"Start Time\"), React.createElement(TimeInput, {\n        value: this.isNew ? '5:00 PM' : this.state.startTime,\n        onValueChange: function onValueChange(time) {\n          return _this6.setState({\n            startTime: time,\n            didChangeCustomStart: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        }\n      }))), React.createElement(View, {\n        style: this.state.customTime ? Styles.customTimeContainer : Styles.hide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        }\n      }, React.createElement(View, {\n        style: Styles.inputRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        }\n      }, React.createElement(Text, {\n        style: Styles.customTimeTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        }\n      }, \"End Time\"), React.createElement(TimeInput, {\n        value: this.isNew ? '7:00 PM' : this.state.endTime,\n        onValueChange: function onValueChange(time) {\n          return _this6.setState({\n            endTime: time,\n            didChangeCustomEnd: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        }\n      }))), React.createElement(View, {\n        style: Styles.inputRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        }\n      }, React.createElement(Text, {\n        style: Styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        }\n      }, \"Price\"), React.createElement(TextInput, {\n        style: Styles.inputBox,\n        keyboardType: \"numeric\",\n        returnKeyType: \"done\",\n        value: this.state.price,\n        onChangeText: function onChangeText(value) {\n          if (new RegExp(\"^\\\\d*(\\\\.\\\\d{0,2})?$\").test(value)) {\n            _this6.setState({\n              price: value\n            });\n          } else {\n            alert('Please only enter monetary values.');\n\n            _this6.setState({\n              price: _this6.state.price\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        }\n      }))), React.createElement(View, {\n        style: Styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        }\n      }, this.isNew ? null : React.createElement(Button, {\n        title: \"Generate Forms\",\n        disabled: this.state.disableDocGeneration,\n        color: \"green\",\n        onPress: function onPress() {\n          _this6.props.navigation.navigate('Documentation', {\n            database: _this6.props.database,\n            event: _this6.props.event,\n            venue: _this6.props.defaultVenue,\n            date: _this6.props.defaultDate\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        }\n      }), this.isNew ? null : React.createElement(View, {\n        style: Styles.buttonBuffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        }\n      }), React.createElement(Button, {\n        title: this.isNew ? 'Create Booking' : 'Save Booking',\n        onPress: function onPress() {\n          if (!_this6.state.clientID) {\n            alert('Please choose a valid client', 'Error');\n          } else {\n            var event = _this6.props.event || new Event();\n            var buttons = _this6.state.buttons;\n            var checkedButton = buttons.find(function (element) {\n              return element.checked;\n            });\n\n            if (_this6.state.customTime) {\n              if (_this6.isNew) {\n                if (!_this6.state.didChangeCustomStart) {\n                  _this6.state.startTime = '17:00';\n                }\n\n                if (!_this6.state.didChangeCustomEnd) {\n                  _this6.state.endTime = '19:00';\n                }\n              }\n            } else {\n              var splits = checkedButton.label.split('-');\n\n              _this6.setState({\n                startTime: toMilitaryTime(splits[0].trim()),\n                endTime: toMilitaryTime(splits[1].trim()),\n                customTime: false\n              });\n            }\n\n            event.update(_this6.state);\n\n            _this6.props.navigation.goBack();\n\n            _this6.props.onSave(event);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        }\n      }), this.isNew ? null : React.createElement(View, {\n        style: Styles.buttonBuffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        }\n      }), this.isNew ? null : React.createElement(Button, {\n        title: \"Delete Booking\",\n        color: \"red\",\n        onPress: function onPress() {\n          Alert.alert('Confirmation', 'Are you sure you want to delete this booking?', [{\n            text: 'Cancel'\n          }, {\n            text: 'OK',\n            onPress: function onPress() {\n              _this6.props.navigation.goBack();\n\n              _this6.props.onDelete(_this6.props.event);\n            }\n          }], {\n            cancelable: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        }\n      })));\n    }\n  }]);\n\n  return EventView;\n}(React.Component), _class2.propTypes = {\n  event: PropTypes.instanceOf(Event),\n  defaultVenue: PropTypes.instanceOf(Venue),\n  defaultDate: PropTypes.instanceOf(Date),\n  onSave: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n  database: PropTypes.instanceOf(Database)\n}, _temp)) || _class);\nexport { EventView as default };\n\nvar DateInput = function (_React$Component) {\n  _inherits(DateInput, _React$Component);\n\n  function DateInput(props) {\n    var _this;\n\n    _classCallCheck(this, DateInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DateInput).call(this, props));\n    _this.state = {\n      value: toDateTime({\n        date: _this.props.value\n      }),\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(DateInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: Styles.datetimeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: Styles.inputBox,\n        onPress: function onPress() {\n          return _this2.setState({\n            open: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        }\n      }, toUS(toDateString(this.state.value)))), React.createElement(DateTimePicker, {\n        date: this.state.value,\n        mode: \"date\",\n        isVisible: this.state.open,\n        onConfirm: function onConfirm(date) {\n          _this2.setState({\n            value: date,\n            open: false\n          });\n\n          _this2.props.onValueChange(toDateString(date));\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        }\n      }));\n    }\n  }]);\n\n  return DateInput;\n}(React.Component);\n\nDateInput.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  value: PropTypes.string\n};\nDateInput.defaultProps = {\n  value: toUS(toDateString(new Date()))\n};\nvar EventStyles = StyleSheet.create({\n  moreContainer: {\n    width: '10%'\n  }\n});","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/views/EventView.js"],"names":["React","PropTypes","Event","Venue","RadioGroup","DateTimePicker","Styles","toAMPM","toDateString","toDateTime","toMilitaryTime","toTimeString","toUS","Database","withMappedNavigationProps","Dropdown","TimeInput","AppContainer","EventView","props","event","isNew","id","state","clientID","database","clients","clientName","venueID","defaultVenue","price","toString","date","defaultDate","start","startTime","endTime","end","customTime","didChangeCustomStart","didChangeCustomEnd","buttons","isClientDeleted","disableDocGeneration","_generateRadioButtons","venue","venues","find","element","presetTimeSlots","length","sortAndFilterTimeSlots","client","timeSlots","filter","timeSlot","sort","el1","el2","hour1","parseInt","split","hour2","timeRanges","i","startAmPm","endAmPm","push","label","value","timeString","join","matchingButton","button","checked","includeMonthDocs","docQueries","sendForm","type","month","getMonth","year","getFullYear","Promise","all","then","alert","catch","err","console","error","finally","setState","infoView","contentContainer","infoTitle","hide","inputRow","inputTitle","pickerBox","map","stageName","inputRow2","inputBox","dateContainer","datetimeContainer","selected","b","splits","trim","customTimeContainer","customTimeTitle","time","RegExp","test","buttonContainer","navigation","navigate","buttonBuffer","checkedButton","update","goBack","onSave","Alert","text","onPress","onDelete","cancelable","Component","propTypes","instanceOf","Date","func","isRequired","DateInput","open","onValueChange","string","defaultProps","EventStyles","StyleSheet","create","moreContainer","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Event, Venue } from '../objects';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { RadioGroup } from 'react-native-btr';\r\nimport DateTimePicker from 'react-native-modal-datetime-picker/src/index';\r\nimport Styles from '../styles';\r\nimport {\r\n  toAMPM,\r\n  toDateString,\r\n  toDateTime,\r\n  toMilitaryTime,\r\n  toTimeString,\r\n  toUS,\r\n} from '../util';\r\nimport Database from '../Database';\r\nimport { withMappedNavigationProps } from 'react-navigation-props-mapper';\r\nimport Dropdown from '../components/Dropdown';\r\nimport TimeInput from '../components/TimeInput';\r\nimport AppContainer from '../components/AppContainer';\r\n\r\n@withMappedNavigationProps()\r\nexport default class EventView extends React.Component {\r\n  static propTypes = {\r\n    event: PropTypes.instanceOf(Event),\r\n    defaultVenue: PropTypes.instanceOf(Venue),\r\n    defaultDate: PropTypes.instanceOf(Date),\r\n    onSave: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func,\r\n    database: PropTypes.instanceOf(Database),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let event = this.props.event || new Event();\r\n    this.isNew = !event.id;\r\n\r\n    this.state = {\r\n      clientID: event.clientID || this.props.database.clients[0].id,\r\n      clientName: event.clientName || '',\r\n      venueID: this.isNew ? this.props.defaultVenue.id : event.venueID,\r\n      price: event.price.toString() || '',\r\n      date: this.isNew\r\n        ? toDateString(this.props.defaultDate)\r\n        : toDateString(event.start),\r\n      startTime: toTimeString(event.start),\r\n      endTime: toTimeString(event.end),\r\n      customTime: false,\r\n      didChangeCustomStart: false,\r\n      didChangeCustomEnd: false,\r\n      buttons: [],\r\n      isClientDeleted: false,\r\n      disableDocGeneration: false,\r\n    };\r\n\r\n    this.state.buttons = this._generateRadioButtons();\r\n\r\n    if (this.isNew) {\r\n      // Set default time slots to be the first time slots for the current venue\r\n      let venue = this.props.database.venues.find(\r\n        (element) => element.id === this.state.venueID\r\n      );\r\n      let presetTimeSlots = venue.presetTimeSlots;\r\n      if (presetTimeSlots.length) {\r\n        presetTimeSlots = this.sortAndFilterTimeSlots(presetTimeSlots);\r\n        this.state.startTime = presetTimeSlots[0].start;\r\n        this.state.endTime = presetTimeSlots[0].end;\r\n      }\r\n    } else {\r\n      if (\r\n        !this.props.database.clients.find(\r\n          (client) => client.id === this.state.clientID\r\n        )\r\n      ) {\r\n        this.state.isClientDeleted = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  sortAndFilterTimeSlots(timeSlots) {\r\n    // Filter null slots from preset time slots\r\n    timeSlots = timeSlots.filter((timeSlot) => {\r\n      return timeSlot.start != 'null' && timeSlot.end != 'null';\r\n    });\r\n\r\n    // Sort preset time slots\r\n    timeSlots = timeSlots.sort(function (el1, el2) {\r\n      var hour1 = parseInt(el1.start.split(':')[0]);\r\n      var hour2 = parseInt(el2.start.split(':')[0]);\r\n      return hour1 - hour2;\r\n    });\r\n\r\n    return timeSlots;\r\n  }\r\n\r\n  _generateRadioButtons() {\r\n    // Get the current Venue's preset time slot list\r\n    var venue = this.props.database.venues.find(\r\n      (element) => element.id === this.state.venueID\r\n    );\r\n    var presetTimeSlots = venue.presetTimeSlots;\r\n\r\n    // Filter null values and sort time slots\r\n    presetTimeSlots = this.sortAndFilterTimeSlots(presetTimeSlots);\r\n\r\n    // Transform into an array of labels, each in the form of \"1:00 PM - 11:00PM\"\r\n    var timeRanges = [];\r\n    for (var i in presetTimeSlots) {\r\n      var timeSlot = presetTimeSlots[i];\r\n      var startAmPm = toAMPM(timeSlot.start);\r\n      var endAmPm = toAMPM(timeSlot.end);\r\n      timeRanges.push(startAmPm + ' - ' + endAmPm);\r\n    }\r\n\r\n    // Transform in to an array that has each label corresponding to an index in the timeRanges array\r\n    // Example: [{'label': '1:00PM - 11:00PM', 'value': 0}]\r\n    var buttons = [];\r\n    for (var i = 0; i < timeRanges.length; i++) {\r\n      buttons.push({ label: timeRanges[i], value: i });\r\n    }\r\n\r\n    // Configure custom time slot button\r\n    buttons.push({\r\n      label: 'Custom',\r\n      value: 'c',\r\n    });\r\n\r\n    // If editing the event, have the previously selected time slot checked. Else, check the first time slot by default\r\n    let timeString = [\r\n      toAMPM(this.state.startTime),\r\n      toAMPM(this.state.endTime),\r\n    ].join(' - ');\r\n    let matchingButton = buttons.find((button) => {\r\n      return button.label === timeString;\r\n    });\r\n\r\n    if (this.isNew) {\r\n      buttons[0].checked = true;\r\n      if (buttons[0].value === 'c') {\r\n        this.state.customTime = true;\r\n      }\r\n    } else {\r\n      if (matchingButton) {\r\n        matchingButton.checked = true;\r\n      } else {\r\n        buttons[buttons.length - 1].checked = true;\r\n        this.state.customTime = true;\r\n      }\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  _handleDocumentSending(includeMonthDocs) {\r\n    let docQueries = [];\r\n\r\n    // Request for this event's confirmation to be generated & sent\r\n    docQueries.push(\r\n      this.props.database.sendForm({\r\n        type: 'artist_confirmation',\r\n        event: this.props.event.id,\r\n      })\r\n    );\r\n\r\n    // Request for this event's invoice to be generated & sent\r\n    docQueries.push(\r\n      this.props.database.sendForm({\r\n        type: 'invoice',\r\n        event: this.props.event.id,\r\n      })\r\n    );\r\n\r\n    if (includeMonthDocs) {\r\n      // Request for next month's calendar and booking list (why next month?) to be generated & sent\r\n      docQueries.push(\r\n        this.props.database.sendForm({\r\n          type: 'booking_list',\r\n          venue: this.props.event.venueID,\r\n          month: this.props.event.start.getMonth() + 1,\r\n          year: this.props.event.start.getFullYear(),\r\n        })\r\n      );\r\n      docQueries.push(\r\n        this.props.database.sendForm({\r\n          type: 'calendar',\r\n          venue: this.props.event.venueID,\r\n          month: this.props.event.start.getMonth() + 1,\r\n          year: this.props.event.start.getFullYear(),\r\n        })\r\n      );\r\n    }\r\n\r\n    // Resolved once all requests to generate and send documentation are resolved\r\n    Promise.all(docQueries)\r\n      .then(() => {\r\n        alert('Emails successfully sent!');\r\n      })\r\n      .catch((err) => {\r\n        alert('An error occurred while sending the emails.\\n' + err);\r\n        console.error(err);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          disableDocGeneration: false,\r\n        });\r\n      });\r\n\r\n    alert(\r\n      'Emails have now begun sending.' +\r\n        ' Please wait until all emails have been sent before requesting more.' +\r\n        ' This may take up to a minute to complete.'\r\n    );\r\n\r\n    this.setState({\r\n      disableDocGeneration: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppContainer style={Styles.infoView}>\r\n        <View style={Styles.contentContainer}>\r\n          <Text style={Styles.infoTitle}>\r\n            {this.isNew ? 'Create New Booking' : 'Manage Booking'}\r\n          </Text>\r\n\r\n          {/* Client Selector */}\r\n\r\n          <View\r\n            style={this.state.isClientDeleted ? Styles.hide : Styles.inputRow}\r\n          >\r\n            <Text style={Styles.inputTitle}>Client</Text>\r\n            <Dropdown\r\n              style={Styles.pickerBox}\r\n              options={this.props.database.clients.map((client) => {\r\n                return {\r\n                  label: client.stageName,\r\n                  value: client.id,\r\n                };\r\n              })}\r\n              selectedValue={this.state.clientID}\r\n              onValueChange={(value) => this.setState({ clientID: value })}\r\n            />\r\n          </View>\r\n          <View\r\n            style={this.state.isClientDeleted ? Styles.inputRow2 : Styles.hide}\r\n          >\r\n            <Text style={Styles.inputTitle}>Client</Text>\r\n            <Text style={Styles.inputBox}>{this.state.clientName}</Text>\r\n          </View>\r\n\r\n          {/* Date Selector */}\r\n          <View style={Styles.dateContainer}>\r\n            <Text style={Styles.inputTitle}>Date</Text>\r\n            <DateInput\r\n              style={Styles.inputBox}\r\n              value={toUS(this.state.date)}\r\n              onValueChange={(value) => this.setState({ date: value })}\r\n            />\r\n          </View>\r\n\r\n          {/* Time Selector*/}\r\n          <View style={Styles.inputRow}>\r\n            <Text style={Styles.inputTitle}>Time</Text>\r\n            <RadioGroup\r\n              style={Styles.datetimeContainer}\r\n              key={this.state.date}\r\n              selectedIndex={0}\r\n              radioButtons={this._generateRadioButtons()}\r\n              onPress={(buttons) => {\r\n                let selected = buttons.find((b) => b.checked);\r\n                if (selected.value === 'c') {\r\n                  this.setState({ customTime: true });\r\n                } else {\r\n                  let splits = selected.label.split('-');\r\n                  this.setState({\r\n                    startTime: toMilitaryTime(splits[0].trim()),\r\n                    endTime: toMilitaryTime(splits[1].trim()),\r\n                    customTime: false,\r\n                  });\r\n                }\r\n                this.setState({\r\n                  buttons: buttons,\r\n                });\r\n              }}\r\n            />\r\n          </View>\r\n          <View\r\n            style={\r\n              this.state.customTime ? Styles.customTimeContainer : Styles.hide\r\n            }\r\n          >\r\n            <View style={Styles.inputRow}>\r\n              <Text style={Styles.customTimeTitle}>Start Time</Text>\r\n              <TimeInput\r\n                value={this.isNew ? '5:00 PM' : this.state.startTime}\r\n                onValueChange={(time) =>\r\n                  this.setState({ startTime: time, didChangeCustomStart: true })\r\n                }\r\n              />\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={\r\n              this.state.customTime ? Styles.customTimeContainer : Styles.hide\r\n            }\r\n          >\r\n            <View style={Styles.inputRow}>\r\n              <Text style={Styles.customTimeTitle}>End Time</Text>\r\n              <TimeInput\r\n                value={this.isNew ? '7:00 PM' : this.state.endTime}\r\n                onValueChange={(time) =>\r\n                  this.setState({ endTime: time, didChangeCustomEnd: true })\r\n                }\r\n              />\r\n            </View>\r\n          </View>\r\n\r\n          {/* Price Input */}\r\n          <View style={Styles.inputRow}>\r\n            <Text style={Styles.inputTitle}>Price</Text>\r\n            <TextInput\r\n              style={Styles.inputBox}\r\n              keyboardType='numeric'\r\n              returnKeyType='done'\r\n              value={this.state.price}\r\n              onChangeText={(value) => {\r\n                if (new RegExp(`^\\\\d*(\\\\.\\\\d{0,2})?$`).test(value)) {\r\n                  this.setState({ price: value });\r\n                } else {\r\n                  alert('Please only enter monetary values.');\r\n                  this.setState({ price: this.state.price });\r\n                }\r\n              }}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={Styles.buttonContainer}>\r\n          {this.isNew ? null : (\r\n            <Button\r\n              title='Generate Forms'\r\n              disabled={this.state.disableDocGeneration}\r\n              color='green'\r\n              onPress={() => {\r\n                this.props.navigation.navigate('Documentation', {\r\n                  database: this.props.database,\r\n                  event: this.props.event,\r\n                  venue: this.props.defaultVenue,\r\n                  date: this.props.defaultDate,\r\n                });\r\n              }}\r\n            />\r\n          )}\r\n\r\n          {this.isNew ? null : <View style={Styles.buttonBuffer} />}\r\n\r\n          {/* Create/Update Button */}\r\n          <Button\r\n            title={this.isNew ? 'Create Booking' : 'Save Booking'}\r\n            onPress={() => {\r\n              if (!this.state.clientID) {\r\n                alert('Please choose a valid client', 'Error');\r\n              } else {\r\n                let event = this.props.event || new Event();\r\n\r\n                var buttons = this.state.buttons;\r\n                var checkedButton = buttons.find((element) => element.checked);\r\n                if (this.state.customTime) {\r\n                  if (this.isNew) {\r\n                    if (!this.state.didChangeCustomStart) {\r\n                      this.state.startTime = '17:00';\r\n                    }\r\n                    if (!this.state.didChangeCustomEnd) {\r\n                      this.state.endTime = '19:00';\r\n                    }\r\n                  }\r\n                } else {\r\n                  var splits = checkedButton.label.split('-');\r\n                  this.setState({\r\n                    startTime: toMilitaryTime(splits[0].trim()),\r\n                    endTime: toMilitaryTime(splits[1].trim()),\r\n                    customTime: false,\r\n                  });\r\n                }\r\n                event.update(this.state);\r\n                this.props.navigation.goBack();\r\n                this.props.onSave(event);\r\n              }\r\n            }}\r\n          />\r\n\r\n          {this.isNew ? null : <View style={Styles.buttonBuffer} />}\r\n\r\n          {\r\n            /* Delete Button */\r\n            this.isNew ? null : (\r\n              <Button\r\n                title='Delete Booking'\r\n                color='red'\r\n                onPress={() => {\r\n                  Alert.alert(\r\n                    'Confirmation',\r\n                    'Are you sure you want to delete this booking?',\r\n                    [\r\n                      {\r\n                        text: 'Cancel',\r\n                      },\r\n                      {\r\n                        text: 'OK',\r\n                        onPress: () => {\r\n                          this.props.navigation.goBack();\r\n                          this.props.onDelete(this.props.event);\r\n                        },\r\n                      },\r\n                    ],\r\n                    { cancelable: true }\r\n                  );\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        </View>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\n//helper class to input date since the datepicker is bizarrely complex\r\nclass DateInput extends React.Component {\r\n  static propTypes = {\r\n    onValueChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    value: toUS(toDateString(new Date())),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: toDateTime({ date: this.props.value }),\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={Styles.datetimeContainer}>\r\n        <TouchableOpacity\r\n          style={Styles.inputBox}\r\n          onPress={() => this.setState({ open: true })}\r\n        >\r\n          <Text>{toUS(toDateString(this.state.value))}</Text>\r\n        </TouchableOpacity>\r\n        <DateTimePicker\r\n          date={this.state.value}\r\n          mode='date'\r\n          isVisible={this.state.open}\r\n          onConfirm={(date) => {\r\n            this.setState({\r\n              value: date,\r\n              open: false,\r\n            });\r\n            this.props.onValueChange(toDateString(date));\r\n          }}\r\n          onCancel={() => this.setState({ open: false })}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst EventStyles = StyleSheet.create({\r\n  moreContainer: {\r\n    width: '10%',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}