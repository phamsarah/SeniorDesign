{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/RadioGroup.js\";\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport RadioButton from \"./RadioButton\";\n\nvar RadioGroup = function (_Component) {\n  _inherits(RadioGroup, _Component);\n\n  function RadioGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RadioGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      radioButtons: _this.props.radioButtons\n    };\n\n    _this.onPress = function (label) {\n      var radioButtons = _this.state.radioButtons;\n      var currentActive = radioButtons.find(function (e) {\n        return e.checked;\n      });\n      currentActive ? currentActive.checked = false : null;\n      radioButtons.find(function (e) {\n        return e.label === label;\n      }).checked = true;\n\n      _this.setState({\n        radioButtons: radioButtons\n      });\n\n      _this.props.onPress(_this.state.radioButtons);\n    };\n\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          color = _this$props.color,\n          labelStyle = _this$props.labelStyle,\n          style = _this$props.style,\n          radioButtonBorderWidth = _this$props.radioButtonBorderWidth;\n      var horizontal = false;\n      if (style && style.flexDirection === 'row') horizontal = true;\n      return React.createElement(FlatList, {\n        data: this.state.radioButtons,\n        extraData: this.state,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(RadioButton, {\n            borderWidth: radioButtonBorderWidth,\n            checked: item.checked,\n            color: color ? color : item.color,\n            disabled: item.disabled,\n            flexDirection: item.flexDirection,\n            onPress: function onPress() {\n              return _this2.onPress(item.label);\n            },\n            size: item.size,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            }\n          }, React.createElement(Text, {\n            style: [{\n              margin: 10,\n              color: item.color\n            }, labelStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            }\n          }, item.label));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return 'key' + item.label + index;\n        },\n        horizontal: horizontal,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      });\n    }\n  }]);\n\n  return RadioGroup;\n}(Component);\n\nRadioGroup.propTypes = {\n  labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  color: PropTypes.string,\n  onPress: PropTypes.func,\n  radioButtons: PropTypes.array,\n  radioButtonBorderWidth: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n};\nRadioGroup.defaultProps = {\n  labelStyle: {},\n  onPress: function onPress() {\n    return null;\n  },\n  radioButtons: [],\n  radioButtonBorderWidth: 2\n};\nexport default RadioGroup;","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/RadioGroup.js"],"names":["React","Component","PropTypes","RadioButton","RadioGroup","state","radioButtons","props","onPress","label","currentActive","find","e","checked","setState","color","labelStyle","style","radioButtonBorderWidth","horizontal","flexDirection","item","disabled","size","margin","index","propTypes","oneOfType","object","number","array","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FlatList, Text, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RadioButton from './RadioButton';\r\n\r\nclass RadioGroup extends Component {\r\n  state = {\r\n    radioButtons: this.props.radioButtons\r\n  };\r\n\r\n  onPress = label => {\r\n    const radioButtons = this.state.radioButtons;\r\n    const currentActive = radioButtons.find(e => e.checked);\r\n    currentActive ? (currentActive.checked = false) : null;\r\n    radioButtons.find(e => e.label === label).checked = true;\r\n    this.setState({ radioButtons });\r\n    this.props.onPress(this.state.radioButtons);\r\n  };\r\n\r\n  render() {\r\n    const { color, labelStyle, style, radioButtonBorderWidth } = this.props;\r\n    let horizontal = false;\r\n    if (style && style.flexDirection === 'row') horizontal = true;\r\n    return (\r\n      <FlatList\r\n        data={this.state.radioButtons}\r\n        extraData={this.state}\r\n        renderItem={({ item }) => (\r\n          <RadioButton\r\n            borderWidth={radioButtonBorderWidth}\r\n            checked={item.checked}\r\n            color={color ? color : item.color}\r\n            disabled={item.disabled}\r\n            flexDirection={item.flexDirection}\r\n            onPress={() => this.onPress(item.label)}\r\n            size={item.size}\r\n          >\r\n            <Text style={[{ margin: 10, color: item.color }, labelStyle]}>\r\n              {item.label}\r\n            </Text>\r\n          </RadioButton>\r\n        )}\r\n        keyExtractor={(item, index) => 'key' + item.label + index}\r\n        horizontal={horizontal}\r\n        style={style}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nRadioGroup.propTypes = {\r\n  labelStyle: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ]),\r\n  color: PropTypes.string,\r\n  onPress: PropTypes.func,\r\n  radioButtons: PropTypes.array,\r\n  radioButtonBorderWidth: PropTypes.number,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nRadioGroup.defaultProps = {\r\n  labelStyle: {},\r\n  onPress: () => null,\r\n  radioButtons: [],\r\n  radioButtonBorderWidth: 2\r\n};\r\n\r\nexport default RadioGroup;\r\n"]},"metadata":{},"sourceType":"module"}