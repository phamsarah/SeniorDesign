{"ast":null,"code":"var _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/RadioButton.js\";\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\n\nvar RadioButton = function RadioButton(props) {\n  var onPress = props.onPress;\n  var opacity = 1;\n\n  if (props.disabled) {\n    onPress = null;\n    opacity = 0.2;\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: {\n      alignItems: 'center',\n      flexDirection: props.flexDirection\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      borderColor: props.color,\n      borderRadius: props.size * 2,\n      borderWidth: props.borderWidth,\n      opacity: opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: props.checked ? props.color : '#0000',\n      borderRadius: props.size,\n      padding: props.size,\n      margin: props.size * 0.2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    }\n  })), props.children);\n};\n\nRadioButton.propTypes = {\n  borderWidth: PropTypes.number,\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  color: PropTypes.string,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  flexDirection: PropTypes.string,\n  onPress: PropTypes.func,\n  size: PropTypes.number\n};\nRadioButton.defaultProps = {\n  borderWidth: 2,\n  checked: false,\n  color: '#000',\n  disabled: false,\n  flexDirection: 'row',\n  onPress: function onPress() {\n    return null;\n  },\n  size: 8\n};\nexport default RadioButton;","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/RadioButton.js"],"names":["React","PropTypes","RadioButton","props","onPress","opacity","disabled","alignItems","flexDirection","borderColor","color","borderRadius","size","borderWidth","backgroundColor","checked","padding","margin","children","propTypes","number","oneOfType","bool","string","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3B,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,MAAIF,KAAK,CAACG,QAAV,EAAoB;AAClBF,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,OAAO,GAAG,GAAV;AACD;;AACD,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAE,QAAd;AAAwBC,MAAAA,aAAa,EAAEL,KAAK,CAACK;AAA7C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAEN,KAAK,CAACO,KADd;AAELC,MAAAA,YAAY,EAAER,KAAK,CAACS,IAAN,GAAa,CAFtB;AAGLC,MAAAA,WAAW,EAAEV,KAAK,CAACU,WAHd;AAILR,MAAAA,OAAO,EAAPA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACO,KAAtB,GAA8B,OAD1C;AAELC,MAAAA,YAAY,EAAER,KAAK,CAACS,IAFf;AAGLI,MAAAA,OAAO,EAAEb,KAAK,CAACS,IAHV;AAILK,MAAAA,MAAM,EAAEd,KAAK,CAACS,IAAN,GAAa;AAJhB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,EAqBGT,KAAK,CAACe,QArBT,CADF;AAyBD,CAhCD;;AAkCAhB,WAAW,CAACiB,SAAZ,GAAwB;AACtBN,EAAAA,WAAW,EAAEZ,SAAS,CAACmB,MADD;AAEtBL,EAAAA,OAAO,EAAEd,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,IAAX,EAAiBrB,SAAS,CAACmB,MAA3B,CAApB,CAFa;AAGtBV,EAAAA,KAAK,EAAET,SAAS,CAACsB,MAHK;AAItBjB,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,IAAX,EAAiBrB,SAAS,CAACmB,MAA3B,CAApB,CAJY;AAKtBZ,EAAAA,aAAa,EAAEP,SAAS,CAACsB,MALH;AAMtBnB,EAAAA,OAAO,EAAEH,SAAS,CAACuB,IANG;AAOtBZ,EAAAA,IAAI,EAAEX,SAAS,CAACmB;AAPM,CAAxB;AAUAlB,WAAW,CAACuB,YAAZ,GAA2B;AACzBZ,EAAAA,WAAW,EAAE,CADY;AAEzBE,EAAAA,OAAO,EAAE,KAFgB;AAGzBL,EAAAA,KAAK,EAAE,MAHkB;AAIzBJ,EAAAA,QAAQ,EAAE,KAJe;AAKzBE,EAAAA,aAAa,EAAE,KALU;AAMzBJ,EAAAA,OAAO,EAAE;AAAA,WAAM,IAAN;AAAA,GANgB;AAOzBQ,EAAAA,IAAI,EAAE;AAPmB,CAA3B;AAUA,eAAeV,WAAf","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RadioButton = props => {\r\n  let onPress = props.onPress;\r\n  let opacity = 1;\r\n  if (props.disabled) {\r\n    onPress = null;\r\n    opacity = 0.2;\r\n  }\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={{ alignItems: 'center', flexDirection: props.flexDirection }}\r\n    >\r\n      <View\r\n        style={{\r\n          borderColor: props.color,\r\n          borderRadius: props.size * 2,\r\n          borderWidth: props.borderWidth,\r\n          opacity\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: props.checked ? props.color : '#0000',\r\n            borderRadius: props.size,\r\n            padding: props.size,\r\n            margin: props.size * 0.2\r\n          }}\r\n        />\r\n      </View>\r\n      {props.children}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nRadioButton.propTypes = {\r\n  borderWidth: PropTypes.number,\r\n  checked: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n  color: PropTypes.string,\r\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\r\n  flexDirection: PropTypes.string,\r\n  onPress: PropTypes.func,\r\n  size: PropTypes.number\r\n};\r\n\r\nRadioButton.defaultProps = {\r\n  borderWidth: 2,\r\n  checked: false,\r\n  color: '#000',\r\n  disabled: false,\r\n  flexDirection: 'row',\r\n  onPress: () => null,\r\n  size: 8\r\n};\r\n\r\nexport default RadioButton;\r\n"]},"metadata":{},"sourceType":"module"}