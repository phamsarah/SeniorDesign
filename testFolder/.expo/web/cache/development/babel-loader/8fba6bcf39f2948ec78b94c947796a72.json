{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/components/TimeInput.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"../styles\";\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\nimport { toAMPM, toDateTime, toMilitaryTime, toTimeString } from \"../util\";\n\nvar TimeInput = function (_React$Component) {\n  _inherits(TimeInput, _React$Component);\n\n  function TimeInput(props) {\n    var _this;\n\n    _classCallCheck(this, TimeInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimeInput).call(this, props));\n    var msIn15Mins = 1000 * 60 * 15;\n    var now = new Date();\n    now.setMilliseconds(Math.ceil(now.getTime() / msIn15Mins) * msIn15Mins);\n    _this.state = {\n      value: _this.props.value ? toDateTime({\n        time: toMilitaryTime(_this.props.value)\n      }) : now,\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(TimeInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: Styles.datetimeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: Styles.inputBox,\n        onPress: function onPress() {\n          return _this2.setState({\n            open: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, toAMPM(toTimeString(this.state.value)))), React.createElement(DateTimePicker, {\n        date: this.state.value,\n        mode: \"time\",\n        isVisible: this.state.open,\n        onConfirm: function onConfirm(time) {\n          _this2.setState({\n            value: time,\n            open: false\n          });\n\n          _this2.props.onValueChange(toTimeString(time));\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }));\n    }\n  }]);\n\n  return TimeInput;\n}(React.Component);\n\nTimeInput.propTypes = {\n  onSave: PropTypes.func,\n  onDelete: PropTypes.func,\n  onValueChange: PropTypes.func.isRequired,\n  value: PropTypes.string\n};\nexport { TimeInput as default };","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/components/TimeInput.js"],"names":["React","PropTypes","Styles","DateTimePicker","toAMPM","toDateTime","toMilitaryTime","toTimeString","TimeInput","props","msIn15Mins","now","Date","setMilliseconds","Math","ceil","getTime","state","value","time","open","datetimeContainer","inputBox","setState","onValueChange","Component","propTypes","onSave","func","onDelete","isRequired","string"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,cAA5B,EAA4CC,YAA5C;;IAEqBC,S;;;AAQjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,QAAIC,UAAU,GAAG,OAAO,EAAP,GAAY,EAA7B;AACA,QAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,eAAJ,CAAoBC,IAAI,CAACC,IAAL,CAAUJ,GAAG,CAACK,OAAJ,KAAgBN,UAA1B,IAAwCA,UAA5D;AAEA,UAAKO,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,MAAKT,KAAL,CAAWS,KAAX,GAAmBb,UAAU,CAAC;AAACc,QAAAA,IAAI,EAAEb,cAAc,CAAC,MAAKG,KAAL,CAAWS,KAAZ;AAArB,OAAD,CAA7B,GAA0EP,GADxE;AAETS,MAAAA,IAAI,EAAE;AAFG,KAAb;AAPe;AAWlB;;;;6BAEQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAElB,MAAM,CAACmB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEnB,MAAM,CAACoB,QAAhC;AACkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,CAAc;AAACH,YAAAA,IAAI,EAAE;AAAP,WAAd,CAAN;AAAA,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOhB,MAAM,CAACG,YAAY,CAAC,KAAKU,KAAL,CAAWC,KAAZ,CAAb,CAAb,CAHJ,CADJ,EAMI,oBAAC,cAAD;AACI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,KADrB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,IAH1B;AAII,QAAA,SAAS,EAAE,mBAAAD,IAAI,EAAI;AACf,UAAA,MAAI,CAACI,QAAL,CAAc;AACVL,YAAAA,KAAK,EAAEC,IADG;AAEVC,YAAAA,IAAI,EAAE;AAFI,WAAd;;AAKA,UAAA,MAAI,CAACX,KAAL,CAAWe,aAAX,CAAyBjB,YAAY,CAACY,IAAD,CAArC;AACH,SAXL;AAYI,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACI,QAAL,CAAc;AAACH,YAAAA,IAAI,EAAE;AAAP,WAAd,CAAN;AAAA,SAZd;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAuBH;;;;EA7CkCpB,KAAK,CAACyB,S;;AAAxBjB,S,CACVkB,S,GAAY;AACfC,EAAAA,MAAM,EAAE1B,SAAS,CAAC2B,IADH;AAEfC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC2B,IAFL;AAGfJ,EAAAA,aAAa,EAAEvB,SAAS,CAAC2B,IAAV,CAAeE,UAHf;AAIfZ,EAAAA,KAAK,EAAEjB,SAAS,CAAC8B;AAJF,C;SADFvB,S","sourcesContent":["//helper class to input time since the timepicker is bizarrely complex\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Text, TouchableOpacity, View} from \"react-native\";\r\nimport Styles from \"../styles\";\r\nimport DateTimePicker from \"react-native-modal-datetime-picker\";\r\nimport {toAMPM, toDateTime, toMilitaryTime, toTimeString} from \"../util\";\r\n\r\nexport default class TimeInput extends React.Component {\r\n    static propTypes = {\r\n        onSave: PropTypes.func,\r\n        onDelete: PropTypes.func,\r\n        onValueChange: PropTypes.func.isRequired,\r\n        value: PropTypes.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let msIn15Mins = 1000 * 60 * 15;\r\n        let now = new Date();\r\n        now.setMilliseconds(Math.ceil(now.getTime() / msIn15Mins) * msIn15Mins);\r\n\r\n        this.state = {\r\n            value: this.props.value ? toDateTime({time: toMilitaryTime(this.props.value)}) : now,\r\n            open: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={Styles.datetimeContainer}>\r\n                <TouchableOpacity style={Styles.inputBox}\r\n                                  onPress={() => this.setState({open: true})}\r\n                >\r\n                    <Text>{toAMPM(toTimeString(this.state.value))}</Text>\r\n                </TouchableOpacity>\r\n                <DateTimePicker\r\n                    date={this.state.value}\r\n                    mode=\"time\"\r\n                    isVisible={this.state.open}\r\n                    onConfirm={time => {\r\n                        this.setState({\r\n                            value: time,\r\n                            open: false\r\n                        });\r\n\r\n                        this.props.onValueChange(toTimeString(time));\r\n                    }}\r\n                    onCancel={() => this.setState({open: false})}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}