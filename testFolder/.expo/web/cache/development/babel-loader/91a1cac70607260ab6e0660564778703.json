{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/CardWithCustomButton/index.js\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { WithLableAndAddButton } from \"./WithLabelAndAddButton\";\nimport PropTypes from 'prop-types';\n\nvar CardWithCustomButton = function (_Component) {\n  _inherits(CardWithCustomButton, _Component);\n\n  function CardWithCustomButton(props) {\n    var _this;\n\n    _classCallCheck(this, CardWithCustomButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardWithCustomButton).call(this, props));\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.state = {\n      visible: _this.props.visibleByDefault\n    };\n    return _this;\n  }\n\n  _createClass(CardWithCustomButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          iconUp = _this$props.iconUp,\n          iconDown = _this$props.iconDown,\n          style = _this$props.style,\n          title = _this$props.title,\n          titleStyle = _this$props.titleStyle,\n          iconStyle = _this$props.iconStyle,\n          buttonFunction = _this$props.buttonFunction,\n          flatListData = _this$props.flatListData,\n          renderItem = _this$props.renderItem,\n          separator = _this$props.separator,\n          minDisplay = _this$props.minDisplay,\n          showButton = _this$props.showButton,\n          buttonColor = _this$props.buttonColor;\n      var flatList_Data = flatListData.length >= minDisplay && this.state.visible ? flatListData.slice(0, minDisplay) : flatListData;\n      var visible = this.state.visible;\n      var icon = this.state.visible ? iconDown : iconUp;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, React.createElement(WithLableAndAddButton, {\n        showButton: showButton,\n        Title: title,\n        buttonFunction: buttonFunction,\n        style: style,\n        color: buttonColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }), React.createElement(FlatList, {\n        data: _toConsumableArray(flatList_Data),\n        extraData: flatListData,\n        renderItem: renderItem,\n        keyExtractor: this.keyExtractor,\n        ItemSeparatorComponent: separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }), flatListData.length > minDisplay ? React.createElement(TouchableOpacity, {\n        style: [styles.header, style],\n        onPress: function onPress() {\n          return _this2.setState({\n            visible: !visible\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, visible ? \"See All (\" + flatListData.length + \")\" : \"Collapse\")), React.createElement(Icon, {\n        name: icon,\n        style: [styles.icon, iconStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      })) : null);\n    }\n  }]);\n\n  return CardWithCustomButton;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 0,\n    backgroundColor: '#fff'\n  },\n  header: {\n    padding: 16,\n    flexDirection: 'row'\n  },\n  title: {\n    flex: 1\n  },\n  icon: {\n    fontSize: 20\n  }\n});\nCardWithCustomButton.propTypes = {\n  flatListData: PropTypes.array,\n  buttonFunction: PropTypes.func,\n  title: PropTypes.string,\n  iconUp: PropTypes.string,\n  iconDown: PropTypes.string\n};\nCardWithCustomButton.defaultProps = {\n  visibleByDefault: false,\n  iconUp: 'chevron-up',\n  iconDown: 'chevron-down',\n  flatListData: [],\n  minDisplay: 3\n};\nexport default CardWithCustomButton;","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-btr/src/Components/CardWithCustomButton/index.js"],"names":["React","Component","Icon","WithLableAndAddButton","PropTypes","CardWithCustomButton","props","keyExtractor","item","index","toString","state","visible","visibleByDefault","iconUp","iconDown","style","title","titleStyle","iconStyle","buttonFunction","flatListData","renderItem","separator","minDisplay","showButton","buttonColor","flatList_Data","length","slice","icon","styles","container","header","setState","StyleSheet","create","margin","backgroundColor","padding","flexDirection","flex","fontSize","propTypes","array","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, TouchableOpacity, View, StyleSheet, FlatList } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport { WithLableAndAddButton } from './WithLabelAndAddButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CardWithCustomButton extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      visible: this.props.visibleByDefault,\r\n    }\r\n  }\r\n\r\n  keyExtractor = (item, index) => index.toString();\r\n\r\n  render() {\r\n    let {\r\n      iconUp,\r\n      iconDown,\r\n      style,\r\n      title,\r\n      titleStyle,\r\n      iconStyle,\r\n      buttonFunction,\r\n      flatListData,\r\n      renderItem,\r\n      separator,\r\n      minDisplay, \r\n      showButton, \r\n      buttonColor\r\n    } = this.props;\r\n    const flatList_Data = ((flatListData.length >= minDisplay) && this.state.visible) ? flatListData.slice(0, minDisplay) : flatListData;\r\n    const { visible } = this.state;\r\n    const icon = this.state.visible ? iconDown : iconUp;\r\n    return (\r\n      <View style={styles.container}>\r\n        <WithLableAndAddButton\r\n          showButton={showButton}\r\n          Title={title}\r\n          buttonFunction={buttonFunction}\r\n          style={style}\r\n          color={buttonColor}\r\n        />\r\n        <FlatList\r\n          data={[...flatList_Data]}\r\n          extraData={flatListData}\r\n          renderItem={renderItem}\r\n          keyExtractor={this.keyExtractor}\r\n          ItemSeparatorComponent={separator}\r\n        />\r\n        {(flatListData.length > minDisplay) ?\r\n          <TouchableOpacity\r\n            style={[styles.header, style]}\r\n            onPress={() => this.setState({ visible: !visible })}>\r\n            <Text\r\n              style={[styles.title, titleStyle]}\r\n              numberOfLines={1}\r\n            >\r\n              <Text>{visible ? \"See All (\" + flatListData.length + \")\" : \"Collapse\"}</Text>\r\n            </Text>\r\n            <Icon name={icon} style={[styles.icon, iconStyle]} />\r\n          </TouchableOpacity>\r\n          : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    margin: 0,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    flexDirection: 'row',\r\n  },\r\n  title: { flex: 1 },\r\n  icon: { fontSize: 20 },\r\n\r\n});\r\n\r\nCardWithCustomButton.propTypes = {\r\n  flatListData: PropTypes.array,\r\n  buttonFunction: PropTypes.func,\r\n  title: PropTypes.string,\r\n  iconUp: PropTypes.string,\r\n  iconDown: PropTypes.string,\r\n}\r\n\r\nCardWithCustomButton.defaultProps = {\r\n  visibleByDefault: false,\r\n  iconUp: 'chevron-up',\r\n  iconDown: 'chevron-down',\r\n  flatListData: [],\r\n  minDisplay: 3\r\n};\r\n\r\nexport default CardWithCustomButton;\r\n"]},"metadata":{},"sourceType":"module"}