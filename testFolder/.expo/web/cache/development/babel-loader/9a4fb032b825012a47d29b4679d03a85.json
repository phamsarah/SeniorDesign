{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-modal-datetime-picker/src/CustomDatePickerIOS/index.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatePickerIOS from \"react-native-web/dist/exports/DatePickerIOS\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ReactNativeModal from \"react-native-modal\";\nimport styles from \"./index.style\";\n\nvar CustomDatePickerIOS = function (_React$PureComponent) {\n  _inherits(CustomDatePickerIOS, _React$PureComponent);\n\n  function CustomDatePickerIOS() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomDatePickerIOS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomDatePickerIOS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: _this.props.date,\n      userIsInteractingWithPicker: false,\n      minuteInterval: _this.props.minuteInterval || 1\n    };\n\n    _this._handleCancel = function () {\n      _this.confirmed = false;\n\n      _this.props.onCancel();\n\n      _this._resetDate();\n    };\n\n    _this._handleConfirm = function () {\n      _this.confirmed = true;\n\n      _this.props.onConfirm(_this.state.date);\n\n      _this._resetDate();\n    };\n\n    _this._resetDate = function () {\n      _this.setState({\n        date: new Date()\n      });\n    };\n\n    _this._handleOnModalHide = function () {\n      if (_this.confirmed) {\n        _this.props.onHideAfterConfirm(_this.state.date);\n      }\n    };\n\n    _this._handleDateChange = function (date) {\n      _this.setState({\n        date: date,\n        userIsInteractingWithPicker: false\n      });\n\n      _this.props.onDateChange(date);\n    };\n\n    _this._handleUserTouchInit = function () {\n      if (!_this.props.customDatePickerIOS) {\n        _this.setState({\n          userIsInteractingWithPicker: true\n        });\n      }\n\n      return false;\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomDatePickerIOS, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.date !== nextProps.date) {\n        this.setState({\n          date: nextProps.date\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isVisible = _this$props.isVisible,\n          mode = _this$props.mode,\n          titleIOS = _this$props.titleIOS,\n          confirmTextIOS = _this$props.confirmTextIOS,\n          cancelTextIOS = _this$props.cancelTextIOS,\n          customCancelButtonIOS = _this$props.customCancelButtonIOS,\n          customConfirmButtonIOS = _this$props.customConfirmButtonIOS,\n          neverDisableConfirmIOS = _this$props.neverDisableConfirmIOS,\n          customConfirmButtonWhileInteractingIOS = _this$props.customConfirmButtonWhileInteractingIOS,\n          customDatePickerIOS = _this$props.customDatePickerIOS,\n          contentContainerStyleIOS = _this$props.contentContainerStyleIOS,\n          customTitleContainerIOS = _this$props.customTitleContainerIOS,\n          hideTitleContainerIOS = _this$props.hideTitleContainerIOS,\n          datePickerContainerStyleIOS = _this$props.datePickerContainerStyleIOS,\n          reactNativeModalPropsIOS = _this$props.reactNativeModalPropsIOS,\n          titleStyle = _this$props.titleStyle,\n          confirmTextStyle = _this$props.confirmTextStyle,\n          cancelTextStyle = _this$props.cancelTextStyle,\n          pickerRefCb = _this$props.pickerRefCb,\n          minuteInterval = _this$props.minuteInterval,\n          otherProps = _objectWithoutProperties(_this$props, [\"isVisible\", \"mode\", \"titleIOS\", \"confirmTextIOS\", \"cancelTextIOS\", \"customCancelButtonIOS\", \"customConfirmButtonIOS\", \"neverDisableConfirmIOS\", \"customConfirmButtonWhileInteractingIOS\", \"customDatePickerIOS\", \"contentContainerStyleIOS\", \"customTitleContainerIOS\", \"hideTitleContainerIOS\", \"datePickerContainerStyleIOS\", \"reactNativeModalPropsIOS\", \"titleStyle\", \"confirmTextStyle\", \"cancelTextStyle\", \"pickerRefCb\", \"minuteInterval\"]);\n\n      var titleContainer = React.createElement(View, {\n        style: styles.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, titleStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }, titleIOS));\n      var confirmButton;\n\n      if (customConfirmButtonIOS) {\n        if (customConfirmButtonWhileInteractingIOS && this.state.userIsInteractingWithPicker) {\n          confirmButton = customConfirmButtonWhileInteractingIOS;\n        } else {\n          confirmButton = customConfirmButtonIOS;\n        }\n      } else {\n        confirmButton = React.createElement(Text, {\n          style: [styles.confirmText, confirmTextStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          }\n        }, confirmTextIOS);\n      }\n\n      var cancelButton = React.createElement(Text, {\n        style: [styles.cancelText, cancelTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        }\n      }, cancelTextIOS);\n      var DatePickerComponent = customDatePickerIOS || DatePickerIOS;\n      return React.createElement(ReactNativeModal, _extends({\n        isVisible: isVisible,\n        style: [styles.contentContainer, contentContainerStyleIOS],\n        onModalHide: this._handleOnModalHide,\n        onModalShow: function onModalShow() {\n          _this2.setState({\n            minuteInterval: minuteInterval\n          });\n        },\n        backdropOpacity: 0.4\n      }, reactNativeModalPropsIOS, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        }\n      }), React.createElement(View, {\n        style: [styles.datepickerContainer, datePickerContainerStyleIOS],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        }\n      }, !hideTitleContainerIOS && (customTitleContainerIOS || titleContainer), React.createElement(View, {\n        onStartShouldSetResponderCapture: neverDisableConfirmIOS !== true ? this._handleUserTouchInit : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        }\n      }, React.createElement(DatePickerComponent, _extends({\n        ref: pickerRefCb,\n        mode: mode,\n        minuteInterval: this.state.minuteInterval\n      }, otherProps, {\n        date: this.state.date,\n        onDateChange: this._handleDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }))), React.createElement(TouchableHighlight, {\n        style: styles.confirmButton,\n        underlayColor: \"#ebebeb\",\n        onPress: this._handleConfirm,\n        disabled: !neverDisableConfirmIOS && this.state.userIsInteractingWithPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, confirmButton)), React.createElement(TouchableHighlight, {\n        style: styles.cancelButton,\n        underlayColor: \"#ebebeb\",\n        onPress: this._handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        }\n      }, customCancelButtonIOS || cancelButton));\n    }\n  }]);\n\n  return CustomDatePickerIOS;\n}(React.PureComponent);\n\nCustomDatePickerIOS.propTypes = {\n  cancelTextIOS: PropTypes.string,\n  confirmTextIOS: PropTypes.string,\n  customCancelButtonIOS: PropTypes.node,\n  customConfirmButtonIOS: PropTypes.node,\n  neverDisableConfirmIOS: PropTypes.bool,\n  customConfirmButtonWhileInteractingIOS: PropTypes.node,\n  customTitleContainerIOS: PropTypes.node,\n  hideTitleContainerIOS: PropTypes.bool,\n  customDatePickerIOS: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  contentContainerStyleIOS: PropTypes.any,\n  datePickerContainerStyleIOS: PropTypes.any,\n  date: PropTypes.instanceOf(Date),\n  mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n  onConfirm: PropTypes.func.isRequired,\n  onHideAfterConfirm: PropTypes.func,\n  pickerRefCb: PropTypes.func,\n  onCancel: PropTypes.func.isRequired,\n  titleIOS: PropTypes.string,\n  isVisible: PropTypes.bool,\n  reactNativeModalPropsIOS: PropTypes.any,\n  titleStyle: PropTypes.any,\n  confirmTextStyle: PropTypes.any,\n  cancelTextStyle: PropTypes.any,\n  onDateChange: PropTypes.func\n};\nCustomDatePickerIOS.defaultProps = {\n  neverDisableConfirmIOS: false,\n  hideTitleContainerIOS: false,\n  cancelTextIOS: \"Cancel\",\n  confirmTextIOS: \"Confirm\",\n  date: new Date(),\n  mode: \"date\",\n  titleIOS: \"Pick a date\",\n  isVisible: false,\n  onHideAfterConfirm: function onHideAfterConfirm() {},\n  reactNativeModalPropsIOS: {},\n  onDateChange: function onDateChange() {}\n};\nexport { CustomDatePickerIOS as default };","map":{"version":3,"sources":["/Users/dennis/Desktop/music-matters-bookings-system-working/node_modules/react-native-modal-datetime-picker/src/CustomDatePickerIOS/index.js"],"names":["React","PropTypes","ReactNativeModal","styles","CustomDatePickerIOS","state","date","props","userIsInteractingWithPicker","minuteInterval","_handleCancel","confirmed","onCancel","_resetDate","_handleConfirm","onConfirm","setState","Date","_handleOnModalHide","onHideAfterConfirm","_handleDateChange","onDateChange","_handleUserTouchInit","customDatePickerIOS","nextProps","isVisible","mode","titleIOS","confirmTextIOS","cancelTextIOS","customCancelButtonIOS","customConfirmButtonIOS","neverDisableConfirmIOS","customConfirmButtonWhileInteractingIOS","contentContainerStyleIOS","customTitleContainerIOS","hideTitleContainerIOS","datePickerContainerStyleIOS","reactNativeModalPropsIOS","titleStyle","confirmTextStyle","cancelTextStyle","pickerRefCb","otherProps","titleContainer","title","confirmButton","confirmText","cancelButton","cancelText","DatePickerComponent","DatePickerIOS","contentContainer","datepickerContainer","PureComponent","propTypes","string","node","bool","oneOfType","func","any","instanceOf","oneOf","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DatePickerIOS, Text, TouchableHighlight, View } from \"react-native\";\nimport ReactNativeModal from \"react-native-modal\";\n\nimport styles from \"./index.style\";\n\nexport default class CustomDatePickerIOS extends React.PureComponent {\n  static propTypes = {\n    cancelTextIOS: PropTypes.string,\n    confirmTextIOS: PropTypes.string,\n    customCancelButtonIOS: PropTypes.node,\n    customConfirmButtonIOS: PropTypes.node,\n    neverDisableConfirmIOS: PropTypes.bool,\n    customConfirmButtonWhileInteractingIOS: PropTypes.node,\n    customTitleContainerIOS: PropTypes.node,\n    hideTitleContainerIOS: PropTypes.bool,\n    customDatePickerIOS: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    contentContainerStyleIOS: PropTypes.any,\n    datePickerContainerStyleIOS: PropTypes.any,\n    date: PropTypes.instanceOf(Date),\n    mode: PropTypes.oneOf([\"date\", \"time\", \"datetime\"]),\n    onConfirm: PropTypes.func.isRequired,\n    onHideAfterConfirm: PropTypes.func,\n    pickerRefCb: PropTypes.func,\n    onCancel: PropTypes.func.isRequired,\n    titleIOS: PropTypes.string,\n    isVisible: PropTypes.bool,\n    reactNativeModalPropsIOS: PropTypes.any,\n    titleStyle: PropTypes.any,\n    confirmTextStyle: PropTypes.any,\n    cancelTextStyle: PropTypes.any,\n    onDateChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    neverDisableConfirmIOS: false,\n    hideTitleContainerIOS: false,\n    cancelTextIOS: \"Cancel\",\n    confirmTextIOS: \"Confirm\",\n    date: new Date(),\n    mode: \"date\",\n    titleIOS: \"Pick a date\",\n    isVisible: false,\n    onHideAfterConfirm: () => {},\n    reactNativeModalPropsIOS: {},\n    onDateChange: () => {}\n  };\n\n  state = {\n    date: this.props.date,\n    userIsInteractingWithPicker: false,\n    minuteInterval: this.props.minuteInterval || 1\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.date !== nextProps.date) {\n      this.setState({\n        date: nextProps.date\n      });\n    }\n  }\n\n  _handleCancel = () => {\n    this.confirmed = false;\n    this.props.onCancel();\n    this._resetDate();\n  };\n\n  _handleConfirm = () => {\n    this.confirmed = true;\n    this.props.onConfirm(this.state.date);\n    this._resetDate();\n  };\n\n  _resetDate = () => {\n    this.setState({\n      date: new Date()\n    });\n  };\n\n  _handleOnModalHide = () => {\n    if (this.confirmed) {\n      this.props.onHideAfterConfirm(this.state.date);\n    }\n  };\n\n  _handleDateChange = date => {\n    this.setState({\n      date,\n      userIsInteractingWithPicker: false\n    });\n    this.props.onDateChange(date);\n  };\n\n  _handleUserTouchInit = () => {\n    // custom date picker shouldn't change this param\n    if (!this.props.customDatePickerIOS) {\n      this.setState({\n        userIsInteractingWithPicker: true\n      });\n    }\n    return false;\n  };\n\n  render() {\n    const {\n      isVisible,\n      mode,\n      titleIOS,\n      confirmTextIOS,\n      cancelTextIOS,\n      customCancelButtonIOS,\n      customConfirmButtonIOS,\n      neverDisableConfirmIOS,\n      customConfirmButtonWhileInteractingIOS,\n      customDatePickerIOS,\n      contentContainerStyleIOS,\n      customTitleContainerIOS,\n      hideTitleContainerIOS,\n      datePickerContainerStyleIOS,\n      reactNativeModalPropsIOS,\n      titleStyle,\n      confirmTextStyle,\n      cancelTextStyle,\n      pickerRefCb,\n      minuteInterval,\n      ...otherProps\n    } = this.props;\n\n    const titleContainer = (\n      <View style={styles.titleContainer}>\n        <Text style={[styles.title, titleStyle]}>{titleIOS}</Text>\n      </View>\n    );\n    let confirmButton;\n\n    // Interested PR: https://github.com/mmazzarolo/react-native-modal-datetime-picker/pull/40\n    // Issue on React-Native: https://github.com/facebook/react-native/issues/8169\n    // Up until now when the user interacted with the picker, if he tapped on the confirm button,\n    // the state was not yet changed and thus the picked value would be old and miss-leading.\n    // DatePickerIOS does not update on the fly, and before it even manages to dispatch an update,\n    // our component is unmounted and thus the state is lost.\n    // We no longer allow our user to tap the confirm button unless the picker is still.\n    // They can always tap the cancel button anyway.\n    if (customConfirmButtonIOS) {\n      if (\n        customConfirmButtonWhileInteractingIOS &&\n        this.state.userIsInteractingWithPicker\n      ) {\n        confirmButton = customConfirmButtonWhileInteractingIOS;\n      } else {\n        confirmButton = customConfirmButtonIOS;\n      }\n    } else {\n      confirmButton = (\n        <Text style={[styles.confirmText, confirmTextStyle]}>\n          {confirmTextIOS}\n        </Text>\n      );\n    }\n    const cancelButton = (\n      <Text style={[styles.cancelText, cancelTextStyle]}>{cancelTextIOS}</Text>\n    );\n    const DatePickerComponent = customDatePickerIOS || DatePickerIOS;\n\n    return (\n      <ReactNativeModal\n        isVisible={isVisible}\n        style={[styles.contentContainer, contentContainerStyleIOS]}\n        onModalHide={this._handleOnModalHide}\n        onModalShow={() => {\n          this.setState({\n            minuteInterval\n          });\n        }}\n        backdropOpacity={0.4}\n        {...reactNativeModalPropsIOS}\n      >\n        <View style={[styles.datepickerContainer, datePickerContainerStyleIOS]}>\n          {!hideTitleContainerIOS &&\n            (customTitleContainerIOS || titleContainer)}\n          <View\n            onStartShouldSetResponderCapture={\n              neverDisableConfirmIOS !== true ? this._handleUserTouchInit : null\n            }\n          >\n            <DatePickerComponent\n              ref={pickerRefCb}\n              mode={mode}\n              minuteInterval={this.state.minuteInterval}\n              {...otherProps}\n              date={this.state.date}\n              onDateChange={this._handleDateChange}\n            />\n          </View>\n          <TouchableHighlight\n            style={styles.confirmButton}\n            underlayColor=\"#ebebeb\"\n            onPress={this._handleConfirm}\n            disabled={\n              !neverDisableConfirmIOS && this.state.userIsInteractingWithPicker\n            }\n          >\n            {confirmButton}\n          </TouchableHighlight>\n        </View>\n\n        <TouchableHighlight\n          style={styles.cancelButton}\n          underlayColor=\"#ebebeb\"\n          onPress={this._handleCancel}\n        >\n          {customCancelButtonIOS || cancelButton}\n        </TouchableHighlight>\n      </ReactNativeModal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}